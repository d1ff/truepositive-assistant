{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "YouTrack REST API",
    "description" : "YouTrack issue tracking and project management system",
    "license" : {
      "url" : "https://www.jetbrains.com/youtrack/buy/license.html"
    },
    "version" : "2020.2"
  },
  "servers" : [ {
    "url" : "/api"
  } ],
  "security" : [ {
    "YouTrack OAuth token, permanent token or application password" : [ ]
  } ],
  "paths" : {
    "activities" : {
      "description" : "This resource provides access to the activities with the possibility to filter them by various parameters.",
      "get" : {
        "parameters" : [ {
          "name" : "categories",
          "in" : "query",
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reverse",
          "in" : "query",
          "description" : "\n                Indicates whether the order of returning activities is from newest to oldest or the opposite.\n                If \"false\", then the oldest activity item that matches a selected filter is returned first.\n                If \"true\", then the newest activity is returned first. By default, \"false\".\n                ",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "\n                Start timestamp of the time interval the activity timestamp belongs to.\n                If the parameter is not set, it is considered to be 0.\n                ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "\n                End timestamp of the time interval the activity timestamp belongs to.\n                If the parameter is not set, it is considered as Long.MAX_VALUE.\n                ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author",
          "in" : "query",
          "description" : "\n                Parameter to filter activities by the author. The database id or login, or Hub id,\n                or 'me' for the current logged in user could be specified.\n                ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueQuery",
          "in" : "query",
          "description" : "Issues search query. Read more about <a href=\"Search-and-Command-Attributes.xml\">search syntax</a>.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,added,author($type,id,login,name,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ActivityItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "activities/{id}" : {
      "description" : "This resource provides access to the activities with the possibility to filter them by various parameters.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,added,author($type,id,login,name,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityItem"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "activitiesPage" : {
      "description" : "\n            This resource provides access to the any activities wrapping it to the page object.\n            The main advantage of the page in comparision to a list of activities is cursors.\n            The page provides boundary marks that allows continuing iteration over the activities from the place\n            the page is finished.    \n            ",
      "get" : {
        "parameters" : [ {
          "name" : "categories",
          "in" : "query",
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reverse",
          "in" : "query",
          "description" : "\n                Indicates whether the order of returning activities is from newest to oldest or the opposite.\n                If \"false\", then the oldest activity item that matches a selected filter is returned first.\n                If \"true\", then the newest activity is returned first. By default, \"false\".\n                ",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "\n                Start timestamp of the time interval the activity timestamp belongs to.\n                If the parameter is not set, it is considered to be 0.\n                ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "\n                End timestamp of the time interval the activity timestamp belongs to.\n                If the parameter is not set, it is considered as Long.MAX_VALUE.\n                ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author",
          "in" : "query",
          "description" : "\n                Parameter to filter activities by the author. The database id or login, or Hub id,\n                or 'me' for the current logged in user could be specified.\n                ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueQuery",
          "in" : "query",
          "description" : "Issues search query. Read more about <a href=\"Search-and-Command-Attributes.xml\">search syntax</a>.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cursor",
          "in" : "query",
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityId",
          "in" : "query",
          "description" : "ID of the activity that should be included in the page. The activity is allocated to the middle of the page.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,activities($type,added,author($type,id,login,name,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp),afterCursor,beforeCursor,hasAfter,hasBefore,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityCursorPage"
                }
              }
            }
          }
        }
      }
    },
    "admin/customFieldSettings/bundles/build" : {
      "description" : "This resource provides operations with sets of builds.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BuildBundle"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildBundle"
              }
            }
          }
        }
      }
    },
    "admin/customFieldSettings/bundles/build/{id}" : {
      "description" : "This resource provides operations with sets of builds.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBundle"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBundle"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "admin/customFieldSettings/bundles/enum" : {
      "description" : "This resource lets you work with set of values of the `enum` type.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EnumBundle"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnumBundle"
              }
            }
          }
        }
      }
    },
    "admin/customFieldSettings/bundles/enum/{id}" : {
      "description" : "This resource lets you work with set of values of the `enum` type.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnumBundle"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnumBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnumBundle"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "admin/customFieldSettings/bundles/ownedField" : {
      "description" : "This resource provides operations with owned field bundles.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OwnedBundle"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OwnedBundle"
              }
            }
          }
        }
      }
    },
    "admin/customFieldSettings/bundles/ownedField/{id}" : {
      "description" : "This resource provides operations with owned field bundles.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OwnedBundle"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OwnedBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OwnedBundle"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "admin/customFieldSettings/bundles/state" : {
      "description" : "This resource provides operations with sets of values of the `state` type.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StateBundle"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StateBundle"
              }
            }
          }
        }
      }
    },
    "admin/customFieldSettings/bundles/state/{id}" : {
      "description" : "This resource provides operations with sets of values of the `state` type.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StateBundle"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StateBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StateBundle"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "admin/customFieldSettings/bundles/user" : {
      "description" : "This resource lets you work with the sets of users in YouTrack.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserBundle"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserBundle"
              }
            }
          }
        }
      }
    },
    "admin/customFieldSettings/bundles/user/{id}" : {
      "description" : "This resource lets you work with the sets of users in YouTrack.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserBundle"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserBundle"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "admin/customFieldSettings/bundles/user/{id}/aggregatedUsers" : {
      "description" : "This resource lets you read the list of all users that the specific bundle contains, both that were added as members of groups and individually.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,banned,email,fullName,guest,id,login,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "admin/customFieldSettings/bundles/user/{id}/aggregatedUsers/{userId}" : {
      "description" : "This resource lets you read the list of all users that the specific bundle contains, both that were added as members of groups and individually.",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "admin/customFieldSettings/bundles/user/{id}/groups" : {
      "description" : "This resource lets you work with the user groups that are added to the specific set of users.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,allUsersGroup,id,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,allUsersGroup,id,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            }
          }
        }
      }
    },
    "admin/customFieldSettings/bundles/user/{id}/groups/{userGroupId}" : {
      "description" : "This resource lets you work with the user groups that are added to the specific set of users.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,allUsersGroup,id,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "userGroupId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "admin/customFieldSettings/bundles/user/{id}/individuals" : {
      "description" : "This resource lets you work with the user accounts that were added individually to a specific set of users (user bundle).",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,banned,email,fullName,guest,id,login,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,banned,email,fullName,guest,id,login,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "admin/customFieldSettings/bundles/user/{id}/individuals/{userId}" : {
      "description" : "This resource lets you work with the user accounts that were added individually to a specific set of users (user bundle).",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,banned,email,fullName,guest,id,login,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "admin/customFieldSettings/bundles/version" : {
      "description" : "This resource provides operations with version bundles.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VersionBundle"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VersionBundle"
              }
            }
          }
        }
      }
    },
    "admin/customFieldSettings/bundles/version/{id}" : {
      "description" : "This resource provides operations with version bundles.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionBundle"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VersionBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionBundle"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "admin/customFieldSettings/customFields" : {
      "description" : "This resource lets you work with the custom fields. In the old REST API we called them \"prototypes\".",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,fieldType($type,id),id,isAutoAttached,isUpdateable,localizedName,name,ordinal"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CustomField"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,fieldType($type,id),id,isAutoAttached,isUpdateable,localizedName,name,ordinal"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomField"
              }
            }
          }
        }
      }
    },
    "admin/customFieldSettings/customFields/{id}" : {
      "description" : "This resource lets you work with the custom fields. In the old REST API we called them \"prototypes\".",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,fieldType($type,id),id,isAutoAttached,isUpdateable,localizedName,name,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomField"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,fieldType($type,id),id,isAutoAttached,isUpdateable,localizedName,name,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomField"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomField"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "admin/customFieldSettings/customFields/{id}/fieldDefaults" : {
      "description" : "This resource lets you read and update default settings of a custom field in a project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,id,isPublic"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customFieldDefaultsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomFieldDefaults"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,id,isPublic"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customFieldDefaultsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomFieldDefaults"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomFieldDefaults"
                }
              }
            }
          }
        }
      }
    },
    "admin/customFieldSettings/customFields/{id}/instances" : {
      "description" : "This resource lets you read a so called instances of the custom fields - settings of the custom field in each project that uses it.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProjectCustomField"
                  }
                }
              }
            }
          }
        }
      }
    },
    "admin/customFieldSettings/customFields/{id}/instances/{projectCustomFieldId}" : {
      "description" : "This resource lets you read a so called instances of the custom fields - settings of the custom field in each project that uses it.",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "projectCustomFieldId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "admin/customFieldSettings/types" : {
      "description" : "This resource lets you read the list of supported types of custom fields in YouTrack.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FieldType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "admin/customFieldSettings/types/{id}" : {
      "description" : "This resource lets you read the list of supported types of custom fields in YouTrack.",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "admin/databaseBackup/backups" : {
      "description" : "\n            This resource lets you access the database backup files. The user account that performs the operation\n            must have <emphasis>Low-level Read Administration</emphasis> permissions.\n            ",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,creationDate,id,link,name,size"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BackupFile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "admin/databaseBackup/backups/{id}" : {
      "description" : "\n            This resource lets you access the database backup files. The user account that performs the operation\n            must have <emphasis>Low-level Read Administration</emphasis> permissions.\n            ",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,creationDate,id,link,name,size"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupFile"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "admin/databaseBackup/settings" : {
      "description" : "This resource lets you configure settings of the database backup. ",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,availableDiskSpace,backupStatus($type,backupCancelled,backupError($type,date,errorMessage,id),backupInProgress,id),id,isOn,location"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatabaseBackupSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,availableDiskSpace,backupStatus($type,backupCancelled,backupError($type,date,errorMessage,id),backupInProgress,id),id,isOn,location"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DatabaseBackupSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatabaseBackupSettings"
                }
              }
            }
          }
        }
      }
    },
    "admin/databaseBackup/settings/backupStatus" : {
      "description" : "This resource lets you get the status of the back up process.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,backupCancelled,backupError($type,date,errorMessage,id),backupInProgress,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "backupStatusId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupStatus"
                }
              }
            }
          }
        }
      }
    },
    "admin/globalSettings" : {
      "description" : "Provides operations with global application settings.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,appearanceSettings($type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,timeZone($type,id,offset,presentation)),id,license($type,error,id,license,username),localeSettings($type,id,isRTL,locale($type,community,id,language,locale,name)),notificationSettings($type,emailSettings($type,id,isEnabled),id,jabberSettings($type,id,isEnabled)),restSettings($type,allowAllOrigins,allowedOrigins,id),systemSettings($type,baseUrl,id,isApplicationReadOnly,maxExportItems,maxUploadFileSize)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GlobalSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,appearanceSettings($type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,timeZone($type,id,offset,presentation)),id,license($type,error,id,license,username),localeSettings($type,id,isRTL,locale($type,community,id,language,locale,name)),notificationSettings($type,emailSettings($type,id,isEnabled),id,jabberSettings($type,id,isEnabled)),restSettings($type,allowAllOrigins,allowedOrigins,id),systemSettings($type,baseUrl,id,isApplicationReadOnly,maxExportItems,maxUploadFileSize)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GlobalSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GlobalSettings"
                }
              }
            }
          }
        }
      }
    },
    "admin/globalSettings/appearanceSettings" : {
      "description" : "This resource lets you work with the Visual settings of your YouTrack service.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,timeZone($type,id,offset,presentation)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appearanceSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppearanceSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,timeZone($type,id,offset,presentation)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appearanceSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppearanceSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppearanceSettings"
                }
              }
            }
          }
        }
      }
    },
    "admin/globalSettings/license" : {
      "description" : "This resource lets you work with the license of your YouTrack service.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,error,id,license,username"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "licenseId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,error,id,license,username"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "licenseId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License"
                }
              }
            }
          }
        }
      }
    },
    "admin/globalSettings/localeSettings" : {
      "description" : "This resource lets you work with the system language settings of your YouTrack service.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,isRTL,locale($type,community,id,language,locale,name)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "localeSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocaleSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,isRTL,locale($type,community,id,language,locale,name)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "localeSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocaleSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocaleSettings"
                }
              }
            }
          }
        }
      }
    },
    "admin/globalSettings/notificationSettings" : {
      "description" : "This resource lets you work with the notification settings of your YouTrack service: read and configure Email and Jabber server settings to enable notifications to users.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,emailSettings($type,id,isEnabled),id,jabberSettings($type,id,isEnabled)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "notificationSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,emailSettings($type,id,isEnabled),id,jabberSettings($type,id,isEnabled)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "notificationSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationSettings"
                }
              }
            }
          }
        }
      }
    },
    "admin/globalSettings/restSettings" : {
      "description" : "This resource lets you work with the Resource Sharing settings of your YouTrack service.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,allowAllOrigins,allowedOrigins,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "restCorsSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestCorsSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,allowAllOrigins,allowedOrigins,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "restCorsSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestCorsSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestCorsSettings"
                }
              }
            }
          }
        }
      }
    },
    "admin/globalSettings/systemSettings" : {
      "description" : "This resource lets you work with the System settings of your YouTrack service.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,baseUrl,id,isApplicationReadOnly,maxExportItems,maxUploadFileSize"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "systemSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,baseUrl,id,isApplicationReadOnly,maxExportItems,maxUploadFileSize"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "systemSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SystemSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemSettings"
                }
              }
            }
          }
        }
      }
    },
    "admin/projects" : {
      "description" : "This resource provides access to projects.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,customFields,id,leader($type,id,login,name,ringId),name,shortName"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "template",
          "in" : "query",
          "description" : "\n                    If the `template` is not specified, then the new project will use the default settings.\n                    <emphasis>Optional</emphasis>. Lets you specify the template to use for the new project. \n                    Possible values: `scrum`, `kanban`.                        \n                    ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,customFields,id,leader($type,id,login,name,ringId),name,shortName"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project"
              }
            }
          }
        }
      }
    },
    "admin/projects/{id}" : {
      "description" : "This resource provides access to projects.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,customFields,id,leader($type,id,login,name,ringId),name,shortName"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,customFields,id,leader($type,id,login,name,ringId),name,shortName"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "admin/projects/{id}/customFields" : {
      "description" : "This resource lets you access and configure custom fields in the specific project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectCustomFieldId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectCustomField"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectCustomFieldId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectCustomField"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectCustomField"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectCustomFieldId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      }
    },
    "admin/projects/{id}/issues" : {
      "description" : "This resource lets you work with issues within the particular project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Issue"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Issue"
              }
            }
          }
        }
      }
    },
    "admin/projects/{id}/issues/{issueId}" : {
      "description" : "This resource lets you work with issues within the particular project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Issue"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Issue"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Issue"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "admin/projects/{id}/timeTrackingSettings" : {
      "description" : "This resource lets you configure the time tracking settings for the specific project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,enabled,estimate($type,field($type,fieldType($type,id),id,localizedName,name),id),id,timeSpent($type,field($type,fieldType($type,id),id,localizedName,name),id)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectTimeTrackingSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectTimeTrackingSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,enabled,estimate($type,field($type,fieldType($type,id),id,localizedName,name),id),id,timeSpent($type,field($type,fieldType($type,id),id,localizedName,name),id)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectTimeTrackingSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectTimeTrackingSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectTimeTrackingSettings"
                }
              }
            }
          }
        }
      }
    },
    "admin/projects/{id}/timeTrackingSettings/workItemTypes" : {
      "description" : "This resource lets you configure work item types of the project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,autoAttached,id,name"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectTimeTrackingSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WorkItemType"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,autoAttached,id,name"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectTimeTrackingSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkItemType"
              }
            }
          }
        }
      }
    },
    "admin/projects/{id}/timeTrackingSettings/workItemTypes/{workItemTypeId}" : {
      "description" : "This resource lets you configure work item types of the project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,autoAttached,id,name"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectTimeTrackingSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workItemTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkItemType"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectTimeTrackingSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workItemTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "projectTimeTrackingSettingsId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "workItemTypeId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "admin/timeTrackingSettings" : {
      "description" : "This resource lets you configure system-wide time tracking settings.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,workItemTypes($type,id,name),workTimeSettings($type,daysAWeek,firstDayOfWeek,id,minutesADay,workDays)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GlobalTimeTrackingSettings"
                }
              }
            }
          }
        }
      }
    },
    "admin/timeTrackingSettings/workItemTypes" : {
      "description" : "This resource lets you read, update, and delete types of work items.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,autoAttached,id,name"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WorkItemType"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,autoAttached,id,name"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkItemType"
              }
            }
          }
        }
      }
    },
    "admin/timeTrackingSettings/workItemTypes/{workItemTypeId}" : {
      "description" : "This resource lets you read, update, and delete types of work items.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,autoAttached,id,name"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workItemTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkItemType"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,autoAttached,id,name"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workItemTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkItemType"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkItemType"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workItemTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "workItemTypeId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "admin/timeTrackingSettings/workTimeSettings" : {
      "description" : "This resource lets you configure the system-wide work time settings.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,daysAWeek,firstDayOfWeek,id,minutesADay,workDays"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workTimeSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkTimeSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,daysAWeek,firstDayOfWeek,id,minutesADay,workDays"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workTimeSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkTimeSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkTimeSettings"
                }
              }
            }
          }
        }
      }
    },
    "agiles" : {
      "description" : "This resource lets you work with agile boards in YouTrack using the REST API.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,columnSettings($type,columns($type,id),field($type,fieldType($type,id),id,localizedName,name),id),id,name,owner($type,id,login,name,ringId),projects($type,id,name,shortName),status($type,id,valid),swimlaneSettings($type,enabled,field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,values($type,id,name))"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Agile"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "template",
          "in" : "query",
          "description" : "The name of the board template that should be used. Possible values: `kanban`, `scrum`, `version`, `custom`, `personal`.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,columnSettings($type,columns($type,id),field($type,fieldType($type,id),id,localizedName,name),id),id,name,owner($type,id,login,name,ringId),projects($type,id,name,shortName),status($type,id,valid),swimlaneSettings($type,enabled,field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,values($type,id,name))"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Agile"
              }
            }
          }
        }
      }
    },
    "agiles/{id}" : {
      "description" : "This resource lets you work with agile boards in YouTrack using the REST API.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,columnSettings($type,columns($type,id),field($type,fieldType($type,id),id,localizedName,name),id),id,name,owner($type,id,login,name,ringId),projects($type,id,name,shortName),status($type,id,valid),swimlaneSettings($type,enabled,field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,values($type,id,name))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Agile"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,columnSettings($type,columns($type,id),field($type,fieldType($type,id),id,localizedName,name),id),id,name,owner($type,id,login,name,ringId),projects($type,id,name,shortName),status($type,id,valid),swimlaneSettings($type,enabled,field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,values($type,id,name))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Agile"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Agile"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "agiles/{id}/sprints" : {
      "description" : "This resource lets you work with sprints of the specific agile board.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,finish,id,isDefault,name,start"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Sprint"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,finish,id,isDefault,name,start"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sprint"
              }
            }
          }
        }
      }
    },
    "agiles/{id}/sprints/{sprintId}" : {
      "description" : "This resource lets you work with sprints of the specific agile board.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,finish,id,isDefault,name,start"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sprintId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sprint"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,finish,id,isDefault,name,start"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sprintId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sprint"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sprint"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sprintId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "sprintId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "commands" : {
      "description" : "This resource lets you apply commands to issues."
    },
    "commands/assist" : {
      "description" : "Lets you get suggestions for the currently entered command."
    },
    "groups" : {
      "description" : "",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,allUsersGroup,id,name,ringId"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "groups/{id}" : {
      "description" : "",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,allUsersGroup,id,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "issueLinkTypes" : {
      "description" : "This resource provides operations with issue link types.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,aggregation,directed,id,localizedName,localizedSourceToTarget,localizedTargetToSource,name,readOnly,sourceToTarget,targetToSource"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueLinkType"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,aggregation,directed,id,localizedName,localizedSourceToTarget,localizedTargetToSource,name,readOnly,sourceToTarget,targetToSource"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueLinkType"
              }
            }
          }
        }
      }
    },
    "issueLinkTypes/{id}" : {
      "description" : "This resource provides operations with issue link types.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,aggregation,directed,id,localizedName,localizedSourceToTarget,localizedTargetToSource,name,readOnly,sourceToTarget,targetToSource"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueLinkType"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,aggregation,directed,id,localizedName,localizedSourceToTarget,localizedTargetToSource,name,readOnly,sourceToTarget,targetToSource"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueLinkType"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueLinkType"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "issueTags" : {
      "description" : "This resource lets you access and work with issue tags in YouTrack.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId)"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueTag"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId)"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueTag"
              }
            }
          }
        }
      }
    },
    "issueTags/{id}" : {
      "description" : "This resource lets you access and work with issue tags in YouTrack.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueTag"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueTag"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueTag"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "issueTags/{id}/issues" : {
      "description" : "This resource lets you get a list of issues that the specific tag is added to.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Issue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "issueTags/{id}/issues/{issueId}" : {
      "description" : "This resource lets you get a list of issues that the specific tag is added to.",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "issues" : {
      "description" : "Resource that provides access to issues.",
      "get" : {
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Issues search query. Read more about search syntax here: @@Search-and-Command-Attributes",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Issue"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "draftId",
          "in" : "query",
          "description" : "ID of a draft to report as the new issue. If no `draftId` is provided, the issue is created from scratch.In this case, you must specify the project in the request payload.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Issue"
              }
            }
          }
        }
      }
    },
    "issues/{id}" : {
      "description" : "Resource that provides access to issues.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Issue"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Issue"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Issue"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "issues/{id}/activities" : {
      "description" : "This resource provides access to the issue activities with the possibility to filter them by various parameters. Basically, this resource lets you get history of operations for specific issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,added,author($type,id,login,name,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityItemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityItem"
                }
              }
            }
          }
        }
      }
    },
    "issues/{id}/activitiesPage" : {
      "description" : "\n            This resource provides access to the issue activities wrapping it to the page object.\n            The main advantage of the page in comparision to a list of activities is cursors.\n            The page provides boundary marks that allows continuing iteration over the activities from the place\n            the page is finished.    \n            ",
      "get" : {
        "parameters" : [ {
          "name" : "categories",
          "in" : "query",
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reverse",
          "in" : "query",
          "description" : "\n                Indicates whether the order of returning activities is from newest to oldest or the opposite.\n                If \"false\", then the oldest activity item that matches a selected filter is returned first.\n                If \"true\", then the newest activity is returned first. By default, \"false\".\n                ",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "\n                Start timestamp of the time interval the activity timestamp belongs to.\n                If the parameter is not set, it is considered to be 0.\n                ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "\n                End timestamp of the time interval the activity timestamp belongs to.\n                If the parameter is not set, it is considered as Long.MAX_VALUE.\n                ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author",
          "in" : "query",
          "description" : "\n                Parameter to filter activities by the author. The database id or login, or Hub id,\n                or 'me' for the current logged in user could be specified.\n                ",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cursor",
          "in" : "query",
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityId",
          "in" : "query",
          "description" : "ID of the activity that should be included in the page. The activity is allocated to the middle of the page.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,activities($type,added,author($type,id,login,name,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp),afterCursor,beforeCursor,hasAfter,hasBefore,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityCursorPageId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityCursorPage"
                }
              }
            }
          }
        }
      }
    },
    "issues/{id}/attachments" : {
      "description" : "This resource lets you work with attachments in the specific issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueAttachment"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueAttachment"
              }
            }
          }
        }
      }
    },
    "issues/{id}/attachments/{issueAttachmentId}" : {
      "description" : "This resource lets you work with attachments in the specific issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueAttachmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueAttachment"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueAttachmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueAttachment"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueAttachment"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueAttachmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueAttachmentId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "issues/{id}/comments" : {
      "description" : "This resource lets you work with comments of an issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,attachments($type,id),author($type,id,login,name,ringId),created,deleted,id,text,updated,usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueComment"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "draftId",
          "in" : "query",
          "description" : "ID of an existing draft that should be published. This parameter is optional.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,attachments($type,id),author($type,id,login,name,ringId),created,deleted,id,text,updated,usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueComment"
              }
            }
          }
        }
      }
    },
    "issues/{id}/comments/{issueCommentId}" : {
      "description" : "This resource lets you work with comments of an issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,attachments($type,id),author($type,id,login,name,ringId),created,deleted,id,text,updated,usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueCommentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueComment"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,attachments($type,id),author($type,id,login,name,ringId),created,deleted,id,text,updated,usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueCommentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueComment"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueComment"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueCommentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueCommentId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "issues/{id}/customFields" : {
      "description" : "This resource lets you work with custom fields of the issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueCustomField"
                  }
                }
              }
            }
          }
        }
      }
    },
    "issues/{id}/customFields/{issueCustomFieldId}" : {
      "description" : "This resource lets you work with custom fields of the issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueCustomFieldId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueCustomField"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueCustomFieldId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueCustomField"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueCustomField"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueCustomFieldId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "issues/{id}/links" : {
      "description" : "This resource lets you read links of the issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,direction,id,linkType($type,id,localizedName,name)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueLink"
                  }
                }
              }
            }
          }
        }
      }
    },
    "issues/{id}/links/{issueLinkId}" : {
      "description" : "This resource lets you read links of the issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,direction,id,linkType($type,id,localizedName,name)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueLinkId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueLink"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueLinkId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "issues/{id}/links/{issueLinkId}/issues" : {
      "description" : "This resource lets you read, add, and remove links to other issues for the current one.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueLinkId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Issue"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueLinkId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Issue"
              }
            }
          }
        }
      }
    },
    "issues/{id}/links/{issueLinkId}/issues/{issueId}" : {
      "description" : "This resource lets you read, add, and remove links to other issues for the current one.",
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueLinkId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueLinkId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "issues/{id}/project" : {
      "description" : "This resource lets you read the project, to which the issue belongs, and move the issue to another project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,customFields,id,leader($type,id,login,name,ringId),name,shortName"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project"
                }
              }
            }
          }
        }
      },
      "put" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,customFields,id,leader($type,id,login,name,ringId),name,shortName"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project"
              }
            }
          }
        }
      }
    },
    "issues/{id}/timeTracking" : {
      "description" : "This sub-resource lets you read work items of an issue and time tracking status in the issue's project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,enabled,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueTimeTrackingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueTimeTracker"
                }
              }
            }
          }
        }
      }
    },
    "issues/{id}/timeTracking/workItems" : {
      "description" : "This resource lets you work with work items in the specific issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),created,creator($type,id,login,name,ringId),date,duration($type,id),id,text,updated,usesMarkdown"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueTimeTrackingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueWorkItem"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),created,creator($type,id,login,name,ringId),date,duration($type,id),id,text,updated,usesMarkdown"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueTimeTrackingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueWorkItem"
              }
            }
          }
        }
      }
    },
    "issues/{id}/timeTracking/workItems/{issueWorkItemId}" : {
      "description" : "This resource lets you work with work items in the specific issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),created,creator($type,id,login,name,ringId),date,duration($type,id),id,text,updated,usesMarkdown"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueTimeTrackingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueWorkItemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueWorkItem"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),created,creator($type,id,login,name,ringId),date,duration($type,id),id,text,updated,usesMarkdown"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueTimeTrackingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueWorkItemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueWorkItem"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueWorkItem"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueTimeTrackingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueWorkItemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueTimeTrackingId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueWorkItemId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "savedQueries" : {
      "description" : "This resource lets you access and work with saved searches in YouTrack.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId),query"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SavedQuery"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId),query"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SavedQuery"
              }
            }
          }
        }
      }
    },
    "savedQueries/{id}" : {
      "description" : "This resource lets you access and work with saved searches in YouTrack.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId),query"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavedQuery"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId),query"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SavedQuery"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavedQuery"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "users" : {
      "description" : "",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,banned,email,fullName,guest,id,login,name,ringId"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "users/{id}" : {
      "description" : "",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,banned,email,fullName,guest,id,login,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "users/{id}/profiles/general" : {
      "description" : "This resource lets you read and update general settings in the YouTrack profile of the specified user.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,locale($type,community,id,language,locale,name),timezone($type,id,offset,presentation)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "generalUserProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GeneralUserProfile"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,locale($type,community,id,language,locale,name),timezone($type,id,offset,presentation)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "generalUserProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GeneralUserProfile"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GeneralUserProfile"
                }
              }
            }
          }
        }
      }
    },
    "users/{id}/profiles/notifications" : {
      "description" : "This resource lets you read and update notification settings in the profile of the specific user.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "notificationsUserProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationsUserProfile"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "notificationsUserProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationsUserProfile"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationsUserProfile"
                }
              }
            }
          }
        }
      }
    },
    "users/{id}/profiles/timetracking" : {
      "description" : "This resource lets you configure the time tracking settings in the user's profile.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,periodFormat($type,id)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timeTrackingUserProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimeTrackingUserProfile"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,periodFormat($type,id)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timeTrackingUserProfileId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TimeTrackingUserProfile"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimeTrackingUserProfile"
                }
              }
            }
          }
        }
      }
    },
    "users/{id}/savedQueries" : {
      "description" : "This resource lets you get the list of saved searches that the specific user created.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId),query"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SavedQuery"
                  }
                }
              }
            }
          }
        }
      }
    },
    "users/{id}/savedQueries/{savedQueryId}" : {
      "description" : "This resource lets you get the list of saved searches that the specific user created.",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "savedQueryId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "users/{id}/tags" : {
      "description" : "This resource lets you work with tags that belong to specific user.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueTag"
                  }
                }
              }
            }
          }
        }
      }
    },
    "users/{id}/tags/{issueTagId}" : {
      "description" : "This resource lets you work with tags that belong to specific user.",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueTagId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "users/me" : {
      "description" : "This resource lets you read the settings of your account and your own profile in YouTrack.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,banned,email,fullName,guest,id,login,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Me"
                }
              }
            }
          }
        }
      }
    },
    "workItems" : {
      "description" : "Resource that provides access to work items.",
      "get" : {
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Issues search query. Read more about search syntax here: @@Search-and-Command-Attributes",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "The start date of the interval for work items date.",
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "The end date of the interval for work items date.",
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The start timestamp of the interval for work items date.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "The end timestamp of the interval for work items date.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "createdStart",
          "in" : "query",
          "description" : "The start timestamp of the interval for work items created date.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "createdEnd",
          "in" : "query",
          "description" : "The end timestamp of the interval for work items created date.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "updatedStart",
          "in" : "query",
          "description" : "The start timestamp of the interval for work items updated date.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "updatedEnd",
          "in" : "query",
          "description" : "The end timestamp of the interval for work items updated date.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "author",
          "in" : "query",
          "description" : "Parameter to filter work items by there author. Could specify few values of database id or login or Hub id or 'me' for current logged in user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "creator",
          "in" : "query",
          "description" : "Parameter to filter work items by there creator. Could specify few values of database id or login or Hub id or 'me' for current logged in user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),created,creator($type,id,login,name,ringId),date,duration($type,id),id,text,updated,usesMarkdown"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueWorkItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "workItems/{id}" : {
      "description" : "Resource that provides access to work items.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),created,creator($type,id,login,name,ringId),date,duration($type,id),id,text,updated,usesMarkdown"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueWorkItem"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    }
  },
  "components" : {
    "schemas" : {
      "ActivityCategory" : {
        "properties" : {
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "ActivityCursorPage" : {
        "properties" : {
          "reverse" : {
            "type" : "boolean",
            "description" : "\n                Indicates whether the order of returning activities on the page is from newest to oldest or the opposite.\n                If \"false\", then the oldest activity item that matches a selected filter is returned first.\n                If \"true\", then the newest activity is returned first. By default, \"false\".\n                ",
            "readOnly" : true
          },
          "beforeCursor" : {
            "type" : "string",
            "description" : "A string value that is required to retrieve the previous page of activities.",
            "readOnly" : true
          },
          "afterCursor" : {
            "type" : "string",
            "description" : "A string value that is required to retrieve the next page of activities.",
            "readOnly" : true
          },
          "hasBefore" : {
            "type" : "boolean",
            "description" : "Indicates if the previous page exists.",
            "readOnly" : true
          },
          "hasAfter" : {
            "type" : "boolean",
            "description" : "Indicates if the next page exists.",
            "readOnly" : true
          },
          "activities" : {
            "description" : "The list of activities in the page.",
            "$ref" : "#/components/schemas/ActivityItem"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "\n            Represents a page object that wraps a list of issue activities.\n            The main advantage of the page in comparision to a list of activities is cursors.\n            The page provides boundary marks that allow continuous iteration over the activities from the place\n            the page is finished. \n            ",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "ActivityItem" : {
        "properties" : {
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "\n            Represents a change in an issue or in its related entities. In the UI, you see these changes as\n            the Activity stream. It shows a feed of all updates of the issue: issue history, comments, attachments,\n            VCS changes, work items, and so on.    \n            ",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "Agile" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the agile board.",
            "readOnly" : false
          },
          "owner" : {
            "description" : "Owner of the agile board.",
            "$ref" : "#/components/schemas/User"
          },
          "visibleFor" : {
            "description" : "The user group that can view this board.",
            "$ref" : "#/components/schemas/UserGroup"
          },
          "visibleForProjectBased" : {
            "type" : "boolean",
            "description" : "When true, the board is visible to everyone who can view all projects that are associated with the board.",
            "readOnly" : false
          },
          "updateableBy" : {
            "description" : "Group of users who can update board settings.",
            "$ref" : "#/components/schemas/UserGroup"
          },
          "updateableByProjectBased" : {
            "type" : "boolean",
            "description" : "When true, anyone who can update the associated projects can update the board.",
            "readOnly" : false
          },
          "orphansAtTheTop" : {
            "type" : "boolean",
            "description" : "When true, the orphan swimlane is placed at the top of the board. Otherwise, the orphans swimlane is located below all other swimlanes.",
            "readOnly" : false
          },
          "hideOrphansSwimlane" : {
            "type" : "boolean",
            "description" : "When true, the orphans swimlane is not displayed on the board.",
            "readOnly" : false
          },
          "estimationField" : {
            "description" : "A custom field that is used as the estimation field for the board.",
            "$ref" : "#/components/schemas/CustomField"
          },
          "projects" : {
            "type" : "array",
            "description" : "A collection of projects associated with the board.",
            "items" : {
              "$ref" : "#/components/schemas/Project"
            }
          },
          "sprints" : {
            "type" : "array",
            "description" : "The set of sprints that are associated with the board.",
            "items" : {
              "$ref" : "#/components/schemas/Sprint"
            }
          },
          "currentSprint" : {
            "description" : "A sprint that is actual for the current date.",
            "$ref" : "#/components/schemas/Sprint"
          },
          "columnSettings" : {
            "description" : "Column settings of the board.",
            "$ref" : "#/components/schemas/ColumnSettings"
          },
          "swimlaneSettings" : {
            "description" : "Settings of the board swimlanes.",
            "$ref" : "#/components/schemas/SwimlaneSettings"
          },
          "sprintsSettings" : {
            "description" : "Settings of the board sprints.",
            "$ref" : "#/components/schemas/SprintsSettings"
          },
          "colorCoding" : {
            "description" : "Color coding settings for the board.",
            "$ref" : "#/components/schemas/ColorCoding"
          },
          "status" : {
            "description" : "Status of the board.",
            "$ref" : "#/components/schemas/AgileStatus"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents an agile board configuration.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "AgileColumn" : {
        "properties" : {
          "presentation" : {
            "type" : "string",
            "description" : "Text presentation of values stored in a column.",
            "readOnly" : true
          },
          "isResolved" : {
            "type" : "boolean",
            "description" : "true if a column represents resolved state of an issue. Can be updated only for newly created value.",
            "readOnly" : true
          },
          "ordinal" : {
            "type" : "integer",
            "description" : "Order of this column on board, counting from left to right.",
            "format" : "int32",
            "readOnly" : false
          },
          "parent" : {
            "description" : "Link to agile column settings this column belongs to.",
            "$ref" : "#/components/schemas/ColumnSettings"
          },
          "wipLimit" : {
            "description" : "WIP limit for this column.",
            "$ref" : "#/components/schemas/WIPLimit"
          },
          "fieldValues" : {
            "type" : "array",
            "description" : "Field values represented by this column.",
            "items" : {
              "$ref" : "#/components/schemas/AgileColumnFieldValue"
            }
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents settings for a single board column",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "AgileColumnFieldValue" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseAttributeValue"
        }, {
          "properties" : {
            "name" : {
              "type" : "string",
              "description" : "Presentation of a field value or values.",
              "readOnly" : false
            },
            "isResolved" : {
              "type" : "boolean",
              "description" : "True, if field has type State and teh value is resolved or all values are resolved.",
              "readOnly" : true
            }
          },
          "description" : "Represents a field value or values, parameterizing agile column."
        } ]
      },
      "AgileStatus" : {
        "properties" : {
          "valid" : {
            "type" : "boolean",
            "description" : "true if the board is in valid state and can be used.",
            "readOnly" : true
          },
          "hasJobs" : {
            "type" : "boolean",
            "description" : "If `true`, then a background job is currently being executed for the board. In this case, while a background job is running, the board cannot be updated.",
            "readOnly" : true
          },
          "errors" : {
            "type" : "string",
            "description" : "List of configuration errors found for this board.",
            "readOnly" : true
          },
          "warnings" : {
            "type" : "string",
            "description" : "List of configuration-related warnings found for this board.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Shows if the board has any configuration problems.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "AppearanceSettings" : {
        "properties" : {
          "timeZone" : {
            "description" : "Default application time zone",
            "$ref" : "#/components/schemas/TimeZoneDescriptor"
          },
          "dateFieldFormat" : {
            "description" : "Default format for dates presentation.",
            "$ref" : "#/components/schemas/DateFormatDescriptor"
          },
          "logo" : {
            "description" : "Application logo.",
            "$ref" : "#/components/schemas/Logo"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the Visual settings of the YouTrack service.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "AttachmentActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreatedDeletedActivityItem"
        }, {
          "properties" : {
            "target" : {
              "description" : "The entity that is the target of the performed action.",
              "$ref" : "#/components/schemas/IssueAttachment"
            },
            "removed" : {
              "type" : "array",
              "description" : "The list of removed attachments.",
              "items" : {
                "$ref" : "#/components/schemas/IssueAttachment"
              }
            },
            "added" : {
              "type" : "array",
              "description" : "The list of added attachments.",
              "items" : {
                "$ref" : "#/components/schemas/IssueAttachment"
              }
            }
          },
          "description" : "Represents a change in the list of attachments of an issue."
        } ]
      },
      "AttributeBasedSwimlaneSettings" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SwimlaneSettings"
        }, {
          "properties" : {
            "field" : {
              "description" : "CustomField which values are used to identify swimlane.",
              "$ref" : "#/components/schemas/FilterField"
            },
            "values" : {
              "type" : "array",
              "description" : "Swimlanes that are visible on the Board.",
              "items" : {
                "$ref" : "#/components/schemas/SwimlaneEntityAttributeValue"
              }
            }
          },
          "description" : ""
        } ]
      },
      "BackupError" : {
        "properties" : {
          "date" : {
            "type" : "integer",
            "description" : "Date and time when the error appeared.",
            "format" : "int64",
            "readOnly" : true
          },
          "errorMessage" : {
            "type" : "string",
            "description" : "Description of the error.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents an error that appeared during the backup.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "BackupFile" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the backup file.",
            "readOnly" : true
          },
          "size" : {
            "type" : "integer",
            "description" : "Size of the file.",
            "format" : "int64",
            "readOnly" : true
          },
          "creationDate" : {
            "type" : "integer",
            "description" : "The timestamp when the backup file was created.",
            "format" : "int64",
            "readOnly" : true
          },
          "link" : {
            "type" : "string",
            "description" : "The link to the backup file.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the backup file.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "BackupStatus" : {
        "properties" : {
          "backupInProgress" : {
            "type" : "boolean",
            "description" : "If `true`, the backup is currently running. Otherwise, `false`",
            "readOnly" : true
          },
          "backupCancelled" : {
            "type" : "boolean",
            "description" : "If `true`, the last back up operation was cancelled. Otherwise, `false`.",
            "readOnly" : true
          },
          "backupError" : {
            "description" : "The error that appeared during the previous backup process. Returns `null`, if there was no error.",
            "$ref" : "#/components/schemas/BackupError"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the current status of the backup process.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "BaseBundle" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Bundle"
        }, {
          "properties" : { },
          "description" : "Represents a set of field values in YouTrack."
        } ]
      },
      "BuildBundle" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseBundle"
        }, {
          "properties" : {
            "values" : {
              "type" : "array",
              "description" : "Collection of builds that this bundle contains.",
              "items" : {
                "$ref" : "#/components/schemas/BuildBundleElement"
              }
            }
          },
          "description" : "Represents a set of builds in YouTrack."
        } ]
      },
      "BuildBundleCustomFieldDefaults" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleCustomFieldDefaults"
        }, {
          "properties" : {
            "bundle" : {
              "description" : "Default set of values used for this field.",
              "$ref" : "#/components/schemas/BuildBundle"
            },
            "defaultValues" : {
              "type" : "array",
              "description" : "List of builds that will be used as the default value for this field.",
              "items" : {
                "$ref" : "#/components/schemas/BuildBundleElement"
              }
            }
          },
          "description" : "Default settings for the build-type field."
        } ]
      },
      "BuildBundleElement" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleElement"
        }, {
          "properties" : {
            "assembleDate" : {
              "type" : "integer",
              "description" : "The date and time when the build was assembled as the timestamp.",
              "format" : "int64",
              "readOnly" : false
            }
          },
          "description" : "Represents a build - a single element of a builds bundle."
        } ]
      },
      "BuildProjectCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleProjectCustomField"
        }, {
          "properties" : {
            "bundle" : {
              "description" : "Set of states that can be field values.",
              "$ref" : "#/components/schemas/BuildBundle"
            },
            "defaultValues" : {
              "type" : "array",
              "description" : "Values that will be set to the new issue by default.",
              "items" : {
                "$ref" : "#/components/schemas/BuildBundleElement"
              }
            }
          },
          "description" : "Represents project settings for the build field."
        } ]
      },
      "Bundle" : {
        "properties" : {
          "isUpdateable" : {
            "type" : "boolean",
            "description" : "If `true`, then the currently logged-in user can update this bundle. Otherwise, `false`.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a set of custom field values in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "BundleCustomFieldDefaults" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CustomFieldDefaults"
        }, {
          "properties" : { },
          "description" : "Represents field defaults for bundle fields."
        } ]
      },
      "BundleElement" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the value.",
            "readOnly" : false
          },
          "bundle" : {
            "description" : "The reference to the bundle that contains this value.",
            "$ref" : "#/components/schemas/Bundle"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the value.",
            "readOnly" : false
          },
          "ordinal" : {
            "type" : "integer",
            "description" : "The position of the value in the set of values for the custom field.",
            "format" : "int32",
            "readOnly" : false
          },
          "color" : {
            "description" : "The color that is assigned to the value in the custom field.",
            "$ref" : "#/components/schemas/FieldStyle"
          },
          "hasRunningJob" : {
            "type" : "boolean",
            "description" : "If true, there are some jobs running in the background for this bundle element. Otherwise, false.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a field value in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "BundleProjectCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProjectCustomField"
        }, {
          "properties" : { },
          "description" : "Represents project settings for the field with a defined set of values."
        } ]
      },
      "ColorCoding" : {
        "properties" : {
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Describe rules according to which different colors are used for cards on agile board.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "ColumnSettings" : {
        "properties" : {
          "field" : {
            "description" : "Custom field, which values are used for columns.",
            "$ref" : "#/components/schemas/CustomField"
          },
          "columns" : {
            "type" : "array",
            "description" : "Columns that are shown on the board.",
            "items" : {
              "$ref" : "#/components/schemas/AgileColumn"
            }
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Agile board columns settings.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "CommandLimitedVisibility" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommandVisibility"
        }, {
          "properties" : {
            "permittedGroups" : {
              "type" : "array",
              "description" : "A list of groups that can access the comment.",
              "items" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            },
            "permittedUsers" : {
              "type" : "array",
              "description" : "A list of users that are allowed to access the comment.",
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "Stores the restricted visibility settings for the command."
        } ]
      },
      "CommandList" : {
        "properties" : {
          "comment" : {
            "type" : "string",
            "description" : "A comment to add to an issue.",
            "readOnly" : false
          },
          "visibility" : {
            "description" : "Stores visibility settings for a comment added with the command.",
            "$ref" : "#/components/schemas/CommandVisibility"
          },
          "query" : {
            "type" : "string",
            "description" : "Stores a command to apply.",
            "readOnly" : false
          },
          "caret" : {
            "type" : "integer",
            "description" : "Current caret position. End of current command by default.",
            "format" : "int32",
            "readOnly" : false
          },
          "silent" : {
            "type" : "boolean",
            "description" : "If true, the command is applied without notification. The default value is false.",
            "readOnly" : false
          },
          "usesMarkdown" : {
            "type" : "boolean",
            "description" : "When true, a comment added with the command is parsed as Markdown formatted. Otherwise, the comment is parsed as YouTrack Wiki formatted.",
            "readOnly" : false
          },
          "runAs" : {
            "type" : "string",
            "description" : "Login for a user on whose behalf the command is executed. To use the runAs parameter, you must have the Low-level Administration permission ",
            "readOnly" : false
          },
          "commands" : {
            "type" : "array",
            "description" : "Stores a collection of commands parsed from the provided query.",
            "items" : {
              "$ref" : "#/components/schemas/ParsedCommand"
            }
          },
          "issues" : {
            "type" : "array",
            "description" : "Stores a collection of issues to which the current command applies.",
            "items" : {
              "$ref" : "#/components/schemas/Issue"
            }
          },
          "suggestions" : {
            "type" : "array",
            "description" : "Stores a collection of possible command suggestions.",
            "items" : {
              "$ref" : "#/components/schemas/Suggestion"
            }
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents list of command and related comment in YouTrack. Can be used to either apply a command or get command suggestions.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "CommandUnlimitedVisibility" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommandVisibility"
        }, {
          "properties" : { },
          "description" : "Comment is visible for all the users who can read the issue."
        } ]
      },
      "CommandVisibility" : {
        "properties" : {
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Visibility settings of the comment that is added along with the command.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "CommentActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreatedDeletedActivityItem"
        }, {
          "properties" : {
            "target" : {
              "description" : "The entity that is the target of the performed action.",
              "$ref" : "#/components/schemas/IssueComment"
            },
            "removed" : {
              "type" : "array",
              "description" : "List of comments removed from the issue.",
              "items" : {
                "$ref" : "#/components/schemas/IssueComment"
              }
            },
            "added" : {
              "type" : "array",
              "description" : "List of comments added to the issue.",
              "items" : {
                "$ref" : "#/components/schemas/IssueComment"
              }
            },
            "authorGroup" : {
              "description" : "The user group, to which the author of the activity belongs, and that is the most relevant to the project of the target issue.",
              "$ref" : "#/components/schemas/UserGroup"
            }
          },
          "description" : "Represents a change in the comments of an issue."
        } ]
      },
      "CommentAttachmentsActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MultiValueActivityItem"
        }, {
          "properties" : {
            "target" : {
              "description" : "The entity that is the target of the performed action.",
              "$ref" : "#/components/schemas/IssueComment"
            },
            "removed" : {
              "type" : "array",
              "description" : "The list of attachments that are removed from the comment.",
              "items" : {
                "$ref" : "#/components/schemas/IssueAttachment"
              }
            },
            "added" : {
              "type" : "array",
              "description" : "The list of attachments that are added to the comment.",
              "items" : {
                "$ref" : "#/components/schemas/IssueAttachment"
              }
            }
          },
          "description" : "Represents a change in the `attachments` attribute of an IssueComment."
        } ]
      },
      "CreatedDeletedActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ActivityItem"
        }, {
          "properties" : { },
          "description" : "Represents an action when an entity is created or deleted in an issue. For example, a new comment is created in the issue."
        } ]
      },
      "CustomField" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the custom field.",
            "readOnly" : false
          },
          "localizedName" : {
            "type" : "string",
            "description" : "If set, then this value is used for the field presentation in UI.",
            "readOnly" : false
          },
          "fieldType" : {
            "description" : "The type of the custom field.",
            "$ref" : "#/components/schemas/FieldType"
          },
          "isAutoAttached" : {
            "type" : "boolean",
            "description" : "If `true`, then the field will be automatically attached to new projects.",
            "readOnly" : false
          },
          "isDisplayedInIssueList" : {
            "type" : "boolean",
            "description" : "If `true`, the field is visible in the Issues list by default.",
            "readOnly" : false
          },
          "ordinal" : {
            "type" : "integer",
            "description" : "Number of the field.",
            "format" : "int32",
            "readOnly" : false
          },
          "aliases" : {
            "type" : "string",
            "description" : "A comma-separated list of aliases that can be used in search and commands.",
            "readOnly" : false
          },
          "fieldDefaults" : {
            "description" : "Default project-related settings for the custom field. May contain different values for custom fields of different types.",
            "$ref" : "#/components/schemas/CustomFieldDefaults"
          },
          "hasRunningJob" : {
            "type" : "boolean",
            "description" : "Indicates whether a background job is running for this field. In this case, some field operations may be temporary unavailable.",
            "readOnly" : true
          },
          "isUpdateable" : {
            "type" : "boolean",
            "description" : "Indicates whether the current user has permissions to update this field.",
            "readOnly" : true
          },
          "instances" : {
            "type" : "array",
            "description" : "Project-related settings. May contain different values for custom fields of different types",
            "items" : {
              "$ref" : "#/components/schemas/ProjectCustomField"
            }
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a custom field in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "CustomFieldActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ActivityItem"
        }, {
          "properties" : {
            "target" : {
              "description" : "The entity that is the target of the performed action.",
              "$ref" : "#/components/schemas/Issue"
            },
            "removed" : {
              "type" : "object",
              "description" : "The old value of the modified custom field in the target issue. The value type depends on the type of the custom field.",
              "readOnly" : true
            },
            "added" : {
              "type" : "object",
              "description" : "The new value of the custom field in the target issue. The value type depends on the type of the custom field.",
              "readOnly" : true
            }
          },
          "description" : "Represents an activity that affects a custom field of an issue."
        } ]
      },
      "CustomFieldDefaults" : {
        "properties" : {
          "canBeEmpty" : {
            "type" : "boolean",
            "description" : "Indicates whether this field can have empty value in the issue.",
            "readOnly" : false
          },
          "emptyFieldText" : {
            "type" : "string",
            "description" : "The text that is shown as a placeholder when the field is empty.",
            "readOnly" : false
          },
          "isPublic" : {
            "type" : "boolean",
            "description" : "If `true`, then a user needs <emphasis>Read Issue</emphasis> and <emphasis>Update Issue</emphasis> permissions to access this field. Otherwise, the field is considered private, and <emphasis>Read Issue Private Fields</emphasis> and <emphasis>Update Issue Private Fields</emphasis> permissions are required.",
            "readOnly" : false
          },
          "parent" : {
            "description" : "Reference to the custom field.",
            "$ref" : "#/components/schemas/CustomField"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents default project-related settings of the custom field. These settings are applied at the moment when the custom field is attached to a project. After that, any changes in default settings do not affect the field settings for this project.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "CustomFilterField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FilterField"
        }, {
          "properties" : {
            "customField" : {
              "description" : "Reference to settings of the custom field.",
              "$ref" : "#/components/schemas/CustomField"
            }
          },
          "description" : "Represents a custom field of the issue."
        } ]
      },
      "DatabaseAttributeValue" : {
        "properties" : {
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents string reference to the value.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "DatabaseBackupSettings" : {
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The location of the backups storage folder.",
            "readOnly" : false
          },
          "filesToKeep" : {
            "type" : "integer",
            "description" : "The number of backup files that should be stored.",
            "format" : "int32",
            "readOnly" : false
          },
          "cronExpression" : {
            "type" : "string",
            "description" : "The cron expression that defines the schedule of the automatic backups.",
            "readOnly" : false
          },
          "archiveFormat" : {
            "type" : "string",
            "description" : "The current selected format of backup files. Supported values are TAR_GZ or ZIP.",
            "enum" : [ "TAR_GZ", "ZIP" ]
          },
          "isOn" : {
            "type" : "boolean",
            "description" : "If `true`, the automatic regular backup is enabled. Otherwise, `false`.",
            "readOnly" : false
          },
          "availableDiskSpace" : {
            "type" : "integer",
            "description" : "The size of available disk space.",
            "format" : "int64",
            "readOnly" : true
          },
          "notifiedUsers" : {
            "type" : "array",
            "description" : "The list of users who get notifications about backup failures.",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "backupStatus" : {
            "description" : "The current status of the backup.",
            "$ref" : "#/components/schemas/BackupStatus"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents database backup settings of the YouTrack instance.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "DateFormatDescriptor" : {
        "properties" : {
          "presentation" : {
            "type" : "string",
            "description" : "Name of the date format.",
            "readOnly" : true
          },
          "pattern" : {
            "type" : "string",
            "description" : "Pattern that is applied when showing date with time.",
            "readOnly" : true
          },
          "datePattern" : {
            "type" : "string",
            "description" : "Pattern that is applied when showing date.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents date format.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "DateIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SimpleIssueCustomField"
        }, {
          "properties" : {
            "value" : {
              "type" : "object",
              "description" : "Date is presented by the timestamp that designates the midday of this date in UTC+0 timezone.",
              "readOnly" : true
            }
          },
          "description" : "Represents the issue custom field of the `date` type."
        } ]
      },
      "DuplicateVote" : {
        "properties" : {
          "issue" : {
            "description" : "The duplicate issue that a user voted for.",
            "$ref" : "#/components/schemas/Issue"
          },
          "user" : {
            "description" : "The user who voted for the duplicate issue.",
            "$ref" : "#/components/schemas/User"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a vote for duplicates of the issue.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "DurationValue" : {
        "properties" : {
          "minutes" : {
            "type" : "integer",
            "description" : "Number of minutes in the time interval.",
            "format" : "int32",
            "readOnly" : true
          },
          "presentation" : {
            "type" : "string",
            "description" : "Presentation of the time interval according to the user settings of duration format and user locale.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the duration value and its visual presentation.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "EmailSettings" : {
        "properties" : {
          "isEnabled" : {
            "type" : "boolean",
            "description" : "true if email notifications are enabled, otherwise false.",
            "readOnly" : false
          },
          "host" : {
            "type" : "string",
            "description" : "Mail server that is used for notification.",
            "readOnly" : false
          },
          "port" : {
            "type" : "integer",
            "description" : "Mail server port.",
            "format" : "int32",
            "readOnly" : false
          },
          "mailProtocol" : {
            "type" : "string",
            "description" : "Mail protocol. Supported values are SMTP, SMTPS and SMTP_TLS",
            "enum" : [ "SMTP", "SMTPS", "SMTP_TLS" ]
          },
          "anonymous" : {
            "type" : "boolean",
            "description" : "If true, mail server is accessed without authorization.",
            "readOnly" : false
          },
          "login" : {
            "type" : "string",
            "description" : "Mail server login.",
            "readOnly" : false
          },
          "sslKey" : {
            "description" : "SSL key to be used for accessing the mail server.",
            "$ref" : "#/components/schemas/StorageEntry"
          },
          "from" : {
            "type" : "string",
            "description" : "From address.",
            "readOnly" : false
          },
          "replyTo" : {
            "type" : "string",
            "description" : "Reply-to address.",
            "readOnly" : false
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents email settings for this YouTrack installation.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "EnumBundle" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseBundle"
        }, {
          "properties" : {
            "values" : {
              "type" : "array",
              "description" : "Field values contained in the enumeration.",
              "items" : {
                "$ref" : "#/components/schemas/EnumBundleElement"
              }
            }
          },
          "description" : "Represents a set of values of the enumeration type in YouTrack."
        } ]
      },
      "EnumBundleCustomFieldDefaults" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleCustomFieldDefaults"
        }, {
          "properties" : {
            "bundle" : {
              "description" : "Default set of values used for this field.",
              "$ref" : "#/components/schemas/EnumBundle"
            },
            "defaultValues" : {
              "type" : "array",
              "description" : "List of enum values that will be used as the default value for this field.",
              "items" : {
                "$ref" : "#/components/schemas/EnumBundleElement"
              }
            }
          },
          "description" : "Default settings for the enum-type field."
        } ]
      },
      "EnumBundleElement" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/LocalizableBundleElement"
        }, {
          "properties" : { },
          "description" : "Represents an enumeration value in YouTrack."
        } ]
      },
      "EnumProjectCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleProjectCustomField"
        }, {
          "properties" : {
            "bundle" : {
              "description" : "Set of enum values that can be used for this field.",
              "$ref" : "#/components/schemas/EnumBundle"
            },
            "defaultValues" : {
              "type" : "array",
              "description" : "Values that will be set to the new issue by default.",
              "items" : {
                "$ref" : "#/components/schemas/EnumBundleElement"
              }
            }
          },
          "description" : "Represents project settings for the enum field."
        } ]
      },
      "ExternalIssue" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the external service.",
            "readOnly" : true
          },
          "url" : {
            "type" : "string",
            "description" : "The URL of the external service.",
            "readOnly" : true
          },
          "key" : {
            "type" : "string",
            "description" : "Issue key in the external system.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "For an issue that was imported from another service, represents the reference to the issue in the external system. ",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "FieldBasedColorCoding" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ColorCoding"
        }, {
          "properties" : {
            "prototype" : {
              "description" : "Sets card color based on this custom field.",
              "$ref" : "#/components/schemas/CustomField"
            }
          },
          "description" : "Allows to set card's color based on a value of some custom field."
        } ]
      },
      "FieldStyle" : {
        "properties" : {
          "background" : {
            "type" : "string",
            "description" : "Background color.",
            "readOnly" : true
          },
          "foreground" : {
            "type" : "string",
            "description" : "Foreground color.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the style settings of the field in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "FieldType" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of the custom field type.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the type of a custom field in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "FilterField" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the field.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents an issue property, which can be a predefined field, a custom field, a link, and so on.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "GeneralUserProfile" : {
        "properties" : {
          "dateFieldFormat" : {
            "description" : "Format in which dates are shown to this user.",
            "$ref" : "#/components/schemas/DateFormatDescriptor"
          },
          "timezone" : {
            "description" : "Timezone of the user.",
            "$ref" : "#/components/schemas/TimeZoneDescriptor"
          },
          "locale" : {
            "description" : "Personal locale selected by the user.",
            "$ref" : "#/components/schemas/LocaleDescriptor"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the user profile in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "GlobalSettings" : {
        "properties" : {
          "systemSettings" : {
            "description" : "System settings that affect core functionality of YouTrack.",
            "$ref" : "#/components/schemas/SystemSettings"
          },
          "notificationSettings" : {
            "description" : "The Notifications settings of the YouTrack service.",
            "$ref" : "#/components/schemas/NotificationSettings"
          },
          "restSettings" : {
            "description" : "The Resource sharing (CORS) settings of the YouTrack service.",
            "$ref" : "#/components/schemas/RestCorsSettings"
          },
          "appearanceSettings" : {
            "description" : "Visual settings of the YouTrack service.",
            "$ref" : "#/components/schemas/AppearanceSettings"
          },
          "localeSettings" : {
            "description" : "System language settings.",
            "$ref" : "#/components/schemas/LocaleSettings"
          },
          "license" : {
            "description" : "License information.",
            "$ref" : "#/components/schemas/License"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents application-wide settings.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "GlobalTimeTrackingSettings" : {
        "properties" : {
          "workItemTypes" : {
            "type" : "array",
            "description" : "Collection of available work item types.",
            "items" : {
              "$ref" : "#/components/schemas/WorkItemType"
            }
          },
          "workTimeSettings" : {
            "description" : "Server's work schedule settings.",
            "$ref" : "#/components/schemas/WorkTimeSettings"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents time tracking settings of your server.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "GroupProjectCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProjectCustomField"
        }, {
          "properties" : {
            "defaultValues" : {
              "type" : "array",
              "description" : "Values that will be set to the new issue by default.",
              "items" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            }
          },
          "description" : "Represents project settings for group custom field."
        } ]
      },
      "Issue" : {
        "properties" : {
          "idReadable" : {
            "type" : "string",
            "description" : "The issue ID.",
            "readOnly" : true
          },
          "created" : {
            "type" : "integer",
            "description" : "The timestamp of the moment when the issue was created.",
            "format" : "int64",
            "readOnly" : true
          },
          "updated" : {
            "type" : "integer",
            "description" : "The timestamp of the last update of the issue.",
            "format" : "int64",
            "readOnly" : true
          },
          "resolved" : {
            "type" : "integer",
            "description" : "The timestamp of the moment when the issue was assigned a state that is considered to be resolved. Returns `null`, if the issue is still in an unresolved state.",
            "format" : "int64",
            "readOnly" : true
          },
          "numberInProject" : {
            "type" : "integer",
            "description" : "The issue number in the project.",
            "format" : "int64",
            "readOnly" : true
          },
          "project" : {
            "description" : "The project to which the issue is assigned.",
            "$ref" : "#/components/schemas/Project"
          },
          "summary" : {
            "type" : "string",
            "description" : "The text that is entered as the issue summary.",
            "readOnly" : false
          },
          "description" : {
            "type" : "string",
            "description" : "The text that is entered as the issue description.",
            "readOnly" : false
          },
          "usesMarkdown" : {
            "type" : "boolean",
            "description" : "When `true`, the issue description is parsed as Markdown. When `false`, the issue description is parsed as YouTrack Wiki. Changing this value does not transform the markup from one syntax to another.",
            "readOnly" : false
          },
          "wikifiedDescription" : {
            "type" : "string",
            "description" : "Issue description as it is shown in UI after processing with wiki/markdown (including HTML markup).",
            "readOnly" : true
          },
          "reporter" : {
            "description" : "The user who reported (created) the issue.",
            "$ref" : "#/components/schemas/User"
          },
          "updater" : {
            "description" : "The user who last updated the issue.",
            "$ref" : "#/components/schemas/User"
          },
          "draftOwner" : {
            "description" : "Creator of this draft if issue is a draft, null if issue was already reported.",
            "$ref" : "#/components/schemas/User"
          },
          "isDraft" : {
            "type" : "boolean",
            "description" : "true if issue is a draft, false if it was already reported.",
            "readOnly" : true
          },
          "visibility" : {
            "description" : "Visibility settings of the issue. They describe who is allowed to see the issue.",
            "$ref" : "#/components/schemas/Visibility"
          },
          "votes" : {
            "type" : "integer",
            "description" : "Number of votes for this issue.",
            "format" : "int32",
            "readOnly" : true
          },
          "comments" : {
            "type" : "array",
            "description" : "A list of comments for the issue.",
            "items" : {
              "$ref" : "#/components/schemas/IssueComment"
            }
          },
          "commentsCount" : {
            "type" : "integer",
            "description" : "A number of comments in the issue.",
            "format" : "int32",
            "readOnly" : true
          },
          "tags" : {
            "type" : "array",
            "description" : "The list of tags that are added to the issue.",
            "items" : {
              "$ref" : "#/components/schemas/IssueTag"
            }
          },
          "links" : {
            "type" : "array",
            "description" : "Issue links (for example, `relates to`, `parent for`, and so on).",
            "items" : {
              "$ref" : "#/components/schemas/IssueLink"
            }
          },
          "externalIssue" : {
            "description" : "Reference to the issue or similar object in an originating third-party system.",
            "$ref" : "#/components/schemas/ExternalIssue"
          },
          "customFields" : {
            "type" : "array",
            "description" : "The collection of custom fields that are present in the issue.",
            "items" : {
              "$ref" : "#/components/schemas/IssueCustomField"
            }
          },
          "voters" : {
            "description" : "Object that contains data about voters for the issue and for its duplicates.",
            "$ref" : "#/components/schemas/IssueVoters"
          },
          "watchers" : {
            "description" : "Object that contains data about users watching this issue or its duplicates.",
            "$ref" : "#/components/schemas/IssueWatchers"
          },
          "attachments" : {
            "type" : "array",
            "description" : "The list of attachments in the issue.",
            "items" : {
              "$ref" : "#/components/schemas/IssueAttachment"
            }
          },
          "subtasks" : {
            "description" : "The list of sub-tasks of the issue.",
            "$ref" : "#/components/schemas/IssueLink"
          },
          "parent" : {
            "description" : "The parent issue for the current one. If the issue is not a sub-task of any issue, then `null`.",
            "$ref" : "#/components/schemas/IssueLink"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents an issue in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueAttachment" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the file.",
            "readOnly" : false
          },
          "author" : {
            "description" : "The user who attached the file to the issue.",
            "$ref" : "#/components/schemas/User"
          },
          "created" : {
            "type" : "integer",
            "description" : "The date and time when the attachment was created as a timestamp.",
            "format" : "int64",
            "readOnly" : true
          },
          "updated" : {
            "type" : "integer",
            "description" : "The date and time the attachment was last updated as a timestamp.",
            "format" : "int64",
            "readOnly" : true
          },
          "size" : {
            "type" : "integer",
            "description" : "The size of the attached file in bytes.",
            "format" : "int64",
            "readOnly" : true
          },
          "extension" : {
            "type" : "string",
            "description" : "The extension that defines the file type.",
            "readOnly" : true
          },
          "charset" : {
            "type" : "string",
            "description" : "Charset of the file.",
            "readOnly" : true
          },
          "mimeType" : {
            "type" : "string",
            "description" : "Mime type of the file.",
            "readOnly" : true
          },
          "metaData" : {
            "type" : "string",
            "description" : "The dimensions of an image file. For an image file, the value is `rw=&amp;rh=`. For a non-image file, the value is empty.",
            "readOnly" : true
          },
          "draft" : {
            "type" : "boolean",
            "description" : "If true, attachment is not yet published, otherwise false.",
            "readOnly" : true
          },
          "removed" : {
            "type" : "boolean",
            "description" : "If true, then attachment is considered to be removed.",
            "readOnly" : true
          },
          "base64Content" : {
            "type" : "string",
            "description" : "",
            "readOnly" : false
          },
          "url" : {
            "type" : "string",
            "description" : "URL of the file.",
            "readOnly" : true
          },
          "visibility" : {
            "description" : "Access setting of the attachment.",
            "$ref" : "#/components/schemas/Visibility"
          },
          "issue" : {
            "description" : "The issue that the file is attached to.",
            "$ref" : "#/components/schemas/Issue"
          },
          "comment" : {
            "description" : "The comment that the file is attached to. Returns `null`, if the file was attached directly to the issue.",
            "$ref" : "#/components/schemas/IssueComment"
          },
          "thumbnailURL" : {
            "type" : "string",
            "description" : "URL of the attachment thumbnail.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a file that is attached to an issue or a comment.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueBasedSwimlaneSettings" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SwimlaneSettings"
        }, {
          "properties" : {
            "field" : {
              "description" : "CustomField which values are used to identify swimlane.",
              "$ref" : "#/components/schemas/FilterField"
            },
            "defaultCardType" : {
              "description" : "Value of a field that a card would have by default.",
              "$ref" : "#/components/schemas/SwimlaneValue"
            },
            "values" : {
              "type" : "array",
              "description" : "When issue has one of this values, it becomes a swimlane on this board.",
              "items" : {
                "$ref" : "#/components/schemas/SwimlaneValue"
              }
            }
          },
          "description" : "Swimlane settings for the case, when each swimlane is represented by an issue and contains this issue's subtasks."
        } ]
      },
      "IssueComment" : {
        "properties" : {
          "text" : {
            "type" : "string",
            "description" : "The text of the comment.",
            "readOnly" : false
          },
          "usesMarkdown" : {
            "type" : "boolean",
            "description" : "When `true`, the comment text is parsed as Markdown. When `false`, the comment text is parsed as YouTrack Wiki. Changing this value does not transform the markup from one syntax to another.",
            "readOnly" : false
          },
          "textPreview" : {
            "type" : "string",
            "description" : "The comment text as it is shown in UI after processing with wiki/markdown (including HTML markup).",
            "readOnly" : true
          },
          "created" : {
            "type" : "integer",
            "description" : "Time the comment was created as a timestamp.",
            "format" : "int64",
            "readOnly" : true
          },
          "updated" : {
            "type" : "integer",
            "description" : "Time the comment was last updated as a timestamp.",
            "format" : "int64",
            "readOnly" : true
          },
          "author" : {
            "description" : "The user who created the comment.",
            "$ref" : "#/components/schemas/User"
          },
          "issue" : {
            "description" : "The issue the comment belongs to.",
            "$ref" : "#/components/schemas/Issue"
          },
          "attachments" : {
            "type" : "array",
            "description" : "The list of attachments that are attached to the comment.",
            "items" : {
              "$ref" : "#/components/schemas/IssueAttachment"
            }
          },
          "visibility" : {
            "description" : "Visibility settings of the comment. They define who is allowed to see the comment.",
            "$ref" : "#/components/schemas/Visibility"
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "When `true`, the comment is considered to be deleted, otherwise false.",
            "readOnly" : false
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents an existing issue comment.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueCreatedActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreatedDeletedActivityItem"
        }, {
          "properties" : {
            "target" : {
              "description" : "Returns the created issue.",
              "$ref" : "#/components/schemas/Issue"
            },
            "removed" : {
              "type" : "array",
              "description" : "For this activity type, always returns an empty list.",
              "items" : {
                "$ref" : "#/components/schemas/Issue"
              }
            },
            "added" : {
              "type" : "array",
              "description" : "For this activity type, always returns an empty list.",
              "items" : {
                "$ref" : "#/components/schemas/Issue"
              }
            }
          },
          "description" : "Represents an event when a user creates a new issue."
        } ]
      },
      "IssueCustomField" : {
        "properties" : {
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueFolder" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the issue folder.",
            "readOnly" : false
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents an issue folder, such as a project, a saved search, or a tag.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueLink" : {
        "properties" : {
          "direction" : {
            "type" : "string",
            "description" : "Link direction. Supported values are OUTWARD, INWARD, and BOTH.",
            "enum" : [ "OUTWARD", "INWARD", "BOTH" ]
          },
          "linkType" : {
            "description" : "Link type.",
            "$ref" : "#/components/schemas/IssueLinkType"
          },
          "issues" : {
            "type" : "array",
            "description" : "List of issues that are linked with this type.",
            "items" : {
              "$ref" : "#/components/schemas/Issue"
            }
          },
          "trimmedIssues" : {
            "type" : "array",
            "description" : "\n                The trimmed list of issues. This property can be used to avoid performance problems for issues that have many links.\n                Use $topLinks and $skipLinks parameters to request a particular part of the whole list.\n                ",
            "items" : {
              "$ref" : "#/components/schemas/Issue"
            }
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents issue links of a particular link type (for example, 'relates to').",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueLinkType" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the issue link type.",
            "readOnly" : false
          },
          "localizedName" : {
            "type" : "string",
            "description" : "The localized name of the issue link type. It is present and can be updated only for predefined issue link types in localized YouTrack installations.",
            "readOnly" : false
          },
          "sourceToTarget" : {
            "type" : "string",
            "description" : "The outward name of the issue link type.",
            "readOnly" : false
          },
          "localizedSourceToTarget" : {
            "type" : "string",
            "description" : "The localized outward name of the issue link type. It is present and can be updated only for predefined issue link types in localized YouTrack installations.",
            "readOnly" : false
          },
          "targetToSource" : {
            "type" : "string",
            "description" : "The inward name of the issue link type.",
            "readOnly" : false
          },
          "localizedTargetToSource" : {
            "type" : "string",
            "description" : "The localized inward name of the issue link type. It is present and can be updated only for the predefined issue link types in localized YouTrack installations.",
            "readOnly" : false
          },
          "directed" : {
            "type" : "boolean",
            "description" : "If `true`, the link is directed. Otherwise, `false`.",
            "readOnly" : false
          },
          "aggregation" : {
            "type" : "boolean",
            "description" : "If `true`, the link represents aggregation relation. Otherwise, `false`.",
            "readOnly" : false
          },
          "readOnly" : {
            "type" : "boolean",
            "description" : "If `true`, link settings cannot be updated. Otherwise, `false`.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the settings of a link type in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueTag" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/WatchFolder"
        }, {
          "properties" : {
            "issues" : {
              "type" : "array",
              "description" : "The collection of issues that this tag is added to.",
              "items" : {
                "$ref" : "#/components/schemas/Issue"
              }
            },
            "color" : {
              "description" : "The color settings of the tag.",
              "$ref" : "#/components/schemas/FieldStyle"
            },
            "untagOnResolve" : {
              "type" : "boolean",
              "description" : "If `true`, this tag will be automatically removed from an issue when the issue is resolved.",
              "readOnly" : false
            }
          },
          "description" : "Represents an issue tag."
        } ]
      },
      "IssueTimeTracker" : {
        "properties" : {
          "workItems" : {
            "type" : "array",
            "description" : "Collection of work items of the issue.",
            "items" : {
              "$ref" : "#/components/schemas/IssueWorkItem"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Indicates whether the time tracking is enabled in the project that the issue belongs to.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents time tracking settings in the issue.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueVoters" : {
        "properties" : {
          "hasVote" : {
            "type" : "boolean",
            "description" : "Indicates whether the user has voted for the issue or one of its duplicates.",
            "readOnly" : false
          },
          "original" : {
            "type" : "array",
            "description" : "Users that voted for this particular issue.",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "duplicate" : {
            "type" : "array",
            "description" : "Users who voted for duplicate issues.",
            "items" : {
              "$ref" : "#/components/schemas/DuplicateVote"
            }
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents users that have voted for the issue or its duplicates.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueWatcher" : {
        "properties" : {
          "user" : {
            "description" : "The user who is subscribed to the issue notifications.",
            "$ref" : "#/components/schemas/User"
          },
          "issue" : {
            "description" : "The original issue that the user subscribed to.",
            "$ref" : "#/components/schemas/Issue"
          },
          "isStarred" : {
            "type" : "boolean",
            "description" : "`true`, if the user added the \"Star\" tag to this issue. Otherwise, `false`.",
            "readOnly" : false
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a user who subscribed for notifications about an issue.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueWatchers" : {
        "properties" : {
          "hasStar" : {
            "type" : "boolean",
            "description" : "`true`, if the current user added the \"Star\" tag to this issue. Otherwise, `false`.",
            "readOnly" : false
          },
          "issueWatchers" : {
            "type" : "array",
            "description" : "The list of users who subscribed for notifications about specific issue.",
            "items" : {
              "$ref" : "#/components/schemas/IssueWatcher"
            }
          },
          "duplicateWatchers" : {
            "type" : "array",
            "description" : "The list of users who subscribed to receive notifications about duplicates of this issue.",
            "items" : {
              "$ref" : "#/components/schemas/IssueWatcher"
            }
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents users that are subscribed to notifications about the issue.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueWorkItem" : {
        "properties" : {
          "author" : {
            "description" : "The user to whom the work is attributed in the work item.",
            "$ref" : "#/components/schemas/User"
          },
          "creator" : {
            "description" : "The user who added the work item to the issue.",
            "$ref" : "#/components/schemas/User"
          },
          "text" : {
            "type" : "string",
            "description" : "The work item description.",
            "readOnly" : false
          },
          "textPreview" : {
            "type" : "string",
            "description" : "Parsed preview of the description.",
            "readOnly" : true
          },
          "type" : {
            "description" : "The work item type.",
            "$ref" : "#/components/schemas/WorkItemType"
          },
          "created" : {
            "type" : "integer",
            "description" : "The date when the work item was created.",
            "format" : "int64",
            "readOnly" : false
          },
          "updated" : {
            "type" : "integer",
            "description" : "The date when the work item was last updated.",
            "format" : "int64",
            "readOnly" : false
          },
          "duration" : {
            "description" : "The duration of the work item.",
            "$ref" : "#/components/schemas/DurationValue"
          },
          "date" : {
            "type" : "integer",
            "description" : "The date and time that is assigned to the work item. Stored as a Unix timestamp in UTC. The time part is set to midnight for the current date.",
            "format" : "int64",
            "readOnly" : false
          },
          "issue" : {
            "description" : "Stores attributes of the issue to which the work item is attached.",
            "$ref" : "#/components/schemas/Issue"
          },
          "usesMarkdown" : {
            "type" : "boolean",
            "description" : "Stores the format of the comment text. When `true`, the comment is processed as Markdown formatted text. Otherwise, the comment is processed as YouTrack Wiki formatted.",
            "readOnly" : false
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a work item in an issue.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "JabberSettings" : {
        "properties" : {
          "isEnabled" : {
            "type" : "boolean",
            "description" : "true if jabber notifications are enabled, otherwise false.",
            "readOnly" : false
          },
          "host" : {
            "type" : "string",
            "description" : "Jabber server address.",
            "readOnly" : false
          },
          "port" : {
            "type" : "integer",
            "description" : "Jabber server port.",
            "format" : "int32",
            "readOnly" : false
          },
          "login" : {
            "type" : "string",
            "description" : "Jabber server login.",
            "readOnly" : false
          },
          "serviceName" : {
            "type" : "string",
            "description" : "Jabber service name.",
            "readOnly" : false
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents jabber settings for this YouTrack installation.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "License" : {
        "properties" : {
          "username" : {
            "type" : "string",
            "description" : "Username used for license.",
            "readOnly" : false
          },
          "license" : {
            "type" : "string",
            "description" : "License key.",
            "readOnly" : false
          },
          "error" : {
            "type" : "string",
            "description" : "License error. If there is no error, this property is empty.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the current license of the YouTrack service.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "LimitedVisibility" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Visibility"
        }, {
          "properties" : {
            "permittedGroups" : {
              "type" : "array",
              "description" : "Members of these groups are allowed to access the entity.",
              "items" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            },
            "permittedUsers" : {
              "type" : "array",
              "description" : "These users are allowed to access the entity.",
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "Represents visibility limited to several users and/or groups."
        } ]
      },
      "LinksActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MultiValueActivityItem"
        }, {
          "properties" : {
            "target" : {
              "description" : "The entity that is the target of the performed action.",
              "$ref" : "#/components/schemas/Issue"
            },
            "removed" : {
              "type" : "array",
              "description" : "The list of issues, from which links to the target issue were removed.",
              "items" : {
                "$ref" : "#/components/schemas/Issue"
              }
            },
            "added" : {
              "type" : "array",
              "description" : "The list of issues, to which links to the target issue are added.",
              "items" : {
                "$ref" : "#/components/schemas/Issue"
              }
            }
          },
          "description" : "\n            Represents a change in the `issues` attribute of an IssueLink entity.\n            That is, each issue has the `links` attribute that contains an array of IssueLink entities.\n            Each of them represents a link between the target issue and a collection of issues.\n            For example, a set of issues to which the target one is linked as \"Duplicated by\".\n            The change in the list of these issues is represented by `LinksActivityItem` entity.\n            "
        } ]
      },
      "LocaleDescriptor" : {
        "properties" : {
          "locale" : {
            "type" : "string",
            "description" : "Locale code.",
            "readOnly" : true
          },
          "language" : {
            "type" : "string",
            "description" : "Language abbreviation.",
            "readOnly" : true
          },
          "community" : {
            "type" : "boolean",
            "description" : "Indicates whether this locale is supported by community. If `false`, the locale is official translation.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the locale.",
            "readOnly" : false
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a language locale that is used in UI.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "LocaleSettings" : {
        "properties" : {
          "locale" : {
            "description" : "Current locale of YouTrack.",
            "$ref" : "#/components/schemas/LocaleDescriptor"
          },
          "isRTL" : {
            "type" : "boolean",
            "description" : "Indicates whether the current system language is right-to-left.",
            "readOnly" : false
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the System Language settings.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "LocalizableBundleElement" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleElement"
        }, {
          "properties" : {
            "localizedName" : {
              "type" : "string",
              "description" : "The localized name of the field value.",
              "readOnly" : false
            }
          },
          "description" : "Represents field value that can be localized."
        } ]
      },
      "Logo" : {
        "properties" : {
          "url" : {
            "type" : "string",
            "description" : "Url of the logo image.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Company logo that is used in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "Me" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/User"
        }, {
          "properties" : { },
          "description" : "Represents the currently logged in user in YouTrack."
        } ]
      },
      "MultiBuildIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseMultiValueIssueCustomField"
        }, {
          "properties" : {
            "value" : {
              "description" : "The list of builds that are set for the issue custom field.",
              "$ref" : "#/components/schemas/BuildBundleElement"
            }
          },
          "description" : "Represents the issue custom field of the `build` type that can have multiple values."
        } ]
      },
      "MultiEnumIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseMultiValueIssueCustomField"
        }, {
          "properties" : {
            "value" : {
              "description" : "The collection of values that are set for the issue custom field.",
              "$ref" : "#/components/schemas/EnumBundleElement"
            }
          },
          "description" : "Represents the issue custom field of the `enum` type that can have multiple values."
        } ]
      },
      "MultiGroupIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseMultiValueIssueCustomField"
        }, {
          "properties" : {
            "value" : {
              "description" : "The list of user groups that are set for the issue custom field.",
              "$ref" : "#/components/schemas/UserGroup"
            }
          },
          "description" : "Represents the issue custom field of the `group` type that can have multiple values."
        } ]
      },
      "MultiOwnedIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseMultiValueIssueCustomField"
        }, {
          "properties" : {
            "value" : {
              "description" : "The list of owned values that are set for the issue custom field.",
              "$ref" : "#/components/schemas/OwnedBundleElement"
            }
          },
          "description" : "Represents the issue custom field of the `ownedField` type that can have multiple values. The predefined Subsystem field is the example of the owned fields."
        } ]
      },
      "MultiUserIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseMultiValueIssueCustomField"
        }, {
          "properties" : {
            "value" : {
              "description" : "The list of users that are set for the issue custom field.",
              "$ref" : "#/components/schemas/User"
            }
          },
          "description" : "Represents the issue custom field of the `user` type that can have multiple values."
        } ]
      },
      "MultiValueActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ActivityItem"
        }, {
          "properties" : { },
          "description" : "Represents a change in an entity attribute that has type of `Array of &lt;Entities&gt;`."
        } ]
      },
      "DatabaseMultiValueIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueCustomField"
        }, {
          "properties" : {
            "projectCustomField" : {
              "description" : "The reference to settings of the custom field in the particular project.",
              "$ref" : "#/components/schemas/ProjectCustomField"
            },
            "value" : {
              "type" : "object",
              "description" : "A collection of values assigned to the issue custom field.",
              "readOnly" : true
            }
          },
          "description" : "Represents the all custom fields that may have multiple values in the issue."
        } ]
      },
      "MultiVersionIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseMultiValueIssueCustomField"
        }, {
          "properties" : {
            "value" : {
              "description" : "The list of versions that are set for the issue custom field.",
              "$ref" : "#/components/schemas/VersionBundleElement"
            }
          },
          "description" : "Represents the issue custom field of the `version` type that can have multiple values."
        } ]
      },
      "NotificationSettings" : {
        "properties" : {
          "emailSettings" : {
            "description" : "Settings for sending emails.",
            "$ref" : "#/components/schemas/EmailSettings"
          },
          "jabberSettings" : {
            "description" : "Settings for sending jabber messages.",
            "$ref" : "#/components/schemas/JabberSettings"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the Notifications settings of the YouTrack service.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "NotificationsUserProfile" : {
        "properties" : {
          "notifyOnOwnChanges" : {
            "type" : "boolean",
            "description" : "Indicates whether the user receives notifications on their own changes.",
            "readOnly" : false
          },
          "jabberNotificationsEnabled" : {
            "type" : "boolean",
            "description" : "Indicates whether the user enabled notifications via jabber.",
            "readOnly" : false
          },
          "emailNotificationsEnabled" : {
            "type" : "boolean",
            "description" : "Indicates whether the user enabled notifications via email.",
            "readOnly" : false
          },
          "mentionNotificationsEnabled" : {
            "type" : "boolean",
            "description" : "Indicates whether the user receives notifications when they is mentioned in issue text.",
            "readOnly" : false
          },
          "duplicateClusterNotificationsEnabled" : {
            "type" : "boolean",
            "description" : "Indicates whether the user receives notifications about issue's duplicates.",
            "readOnly" : false
          },
          "mailboxIntegrationNotificationsEnabled" : {
            "type" : "boolean",
            "description" : "Indicates whether the user receives notifications produced by mailbox integration.",
            "readOnly" : false
          },
          "usePlainTextEmails" : {
            "type" : "boolean",
            "description" : "Indicates whether the user receives emails in plain text.",
            "readOnly" : false
          },
          "autoWatchOnComment" : {
            "type" : "boolean",
            "description" : "Indicates whether the user is automatically subscribed to the issue updates when they leave a comment.",
            "readOnly" : false
          },
          "autoWatchOnVote" : {
            "type" : "boolean",
            "description" : "Indicates whether the user is automatically subscribed to the issue updates when they vote for the issue.",
            "readOnly" : false
          },
          "autoWatchOnUpdate" : {
            "type" : "boolean",
            "description" : "Indicates whether the user is automatically subscribed to the issue updates when they update the issue.",
            "readOnly" : false
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the notification settings in the profile of the specific user.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "OnlineUsers" : {
        "properties" : {
          "users" : {
            "type" : "integer",
            "description" : "Number of online users.",
            "format" : "int32",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Stores number of online user.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "OwnedBundle" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseBundle"
        }, {
          "properties" : {
            "values" : {
              "type" : "array",
              "description" : "Owned values.",
              "items" : {
                "$ref" : "#/components/schemas/OwnedBundleElement"
              }
            }
          },
          "description" : "Represents a set of owned values in YouTrack."
        } ]
      },
      "OwnedBundleCustomFieldDefaults" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleCustomFieldDefaults"
        }, {
          "properties" : {
            "bundle" : {
              "description" : "Default set of values used for this field.",
              "$ref" : "#/components/schemas/OwnedBundle"
            },
            "defaultValues" : {
              "type" : "array",
              "description" : "List of owned values that will be used as the default value for this field.",
              "items" : {
                "$ref" : "#/components/schemas/OwnedBundleElement"
              }
            }
          },
          "description" : "Default settings for the owned-type field."
        } ]
      },
      "OwnedBundleElement" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleElement"
        }, {
          "properties" : {
            "owner" : {
              "description" : "The user who is associated with the value.",
              "$ref" : "#/components/schemas/User"
            }
          },
          "description" : "Represents a single owned value of a set. For example, a subsystem."
        } ]
      },
      "OwnedProjectCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleProjectCustomField"
        }, {
          "properties" : {
            "bundle" : {
              "description" : "Set of owned values that can be used for this field.",
              "$ref" : "#/components/schemas/OwnedBundle"
            },
            "defaultValues" : {
              "type" : "array",
              "description" : "Values that will be set to the new issue by default.",
              "items" : {
                "$ref" : "#/components/schemas/OwnedBundleElement"
              }
            }
          },
          "description" : "Represents project settings for the owned field."
        } ]
      },
      "ParsedCommand" : {
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "HTML description of the command that describes what will be done to issue as a result of this command.",
            "readOnly" : true
          },
          "error" : {
            "type" : "boolean",
            "description" : "Indicates whether the command contains errors.",
            "readOnly" : true
          },
          "delete" : {
            "type" : "boolean",
            "description" : "Indicates whether the command deletes an issue.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the command that was parsed from the provided query.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "PeriodFieldFormat" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the format, in which the period values are displayed to the user.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "PeriodIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueCustomField"
        }, {
          "properties" : {
            "value" : {
              "description" : "Value of the the period field in the issue.",
              "$ref" : "#/components/schemas/PeriodValue"
            }
          },
          "description" : "Represents the period field in the issue."
        } ]
      },
      "PeriodProjectCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProjectCustomField"
        }, {
          "properties" : { },
          "description" : "Represents project settings for the period field."
        } ]
      },
      "PeriodValue" : {
        "properties" : {
          "minutes" : {
            "type" : "integer",
            "description" : "Value in minutes.",
            "format" : "int32",
            "readOnly" : true
          },
          "presentation" : {
            "type" : "string",
            "description" : "Human-readable representation.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the period field value.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "PredefinedFilterField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FilterField"
        }, {
          "properties" : { },
          "description" : "Represents a predefined field of the issue. Predefined fields are always present in an issue and\n            |cannot be customized in a project. For example, `project`, `created`,\n            |`updated`, `tags`, and so on."
        } ]
      },
      "Project" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueFolder"
        }, {
          "properties" : {
            "startingNumber" : {
              "type" : "integer",
              "description" : "Starting number for issues in project. This property can be set only during creation of the new project.",
              "format" : "int64",
              "readOnly" : false
            },
            "shortName" : {
              "type" : "string",
              "description" : "The ID of the project. This short name is also a prefix for an issue ID.",
              "readOnly" : false
            },
            "description" : {
              "type" : "string",
              "description" : "The description of the project as shown on the project profile page.",
              "readOnly" : false
            },
            "leader" : {
              "description" : "The user who is set as the project lead.",
              "$ref" : "#/components/schemas/User"
            },
            "createdBy" : {
              "description" : "The user who created the project.",
              "$ref" : "#/components/schemas/User"
            },
            "issues" : {
              "type" : "array",
              "description" : "A list of all issues that belong to the project.",
              "items" : {
                "$ref" : "#/components/schemas/Issue"
              }
            },
            "customFields" : {
              "type" : "object",
              "description" : "The set of custom fields that are available in the project.",
              "readOnly" : true
            },
            "archived" : {
              "type" : "boolean",
              "description" : "If the project is currently archived, this property is `true`.",
              "readOnly" : false
            },
            "fromEmail" : {
              "type" : "string",
              "description" : "\n                The email address that is used to send notifications for the project. If a 'From' address is not set \n                for the project, the default 'From' address for the YouTrack server is returned.\n                ",
              "readOnly" : false
            },
            "replyToEmail" : {
              "type" : "string",
              "description" : "\n                The email address that is used as the reply email to send notifications for the project.\n                If it is not set for the project, the default address for the YouTrack server is returned.                                    \n                ",
              "readOnly" : false
            },
            "template" : {
              "type" : "boolean",
              "description" : "If `true`, this project is a template. ",
              "readOnly" : false
            },
            "iconUrl" : {
              "type" : "string",
              "description" : "The URL of the icon of the project.",
              "readOnly" : true
            },
            "team" : {
              "description" : "Read-only user group representing all members of the project team.",
              "$ref" : "#/components/schemas/UserGroup"
            }
          },
          "description" : "Represents a YouTrack project."
        } ]
      },
      "ProjectActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SingleValueActivityItem"
        }, {
          "properties" : {
            "target" : {
              "description" : "The entity that is the target of the performed action.",
              "$ref" : "#/components/schemas/Issue"
            },
            "removed" : {
              "type" : "object",
              "description" : "Returns the previous IssueKey. IssueKey is an object that contains the Project entity and numberInProject attribute.",
              "readOnly" : true
            },
            "added" : {
              "type" : "object",
              "description" : "Returns the new IssueKey. IssueKey is an object that contains the Project entity and numberInProject attribute.",
              "readOnly" : true
            }
          },
          "description" : "Represents the change in the project attribute on an Issue."
        } ]
      },
      "ProjectBasedColorCoding" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ColorCoding"
        }, {
          "properties" : {
            "projectColors" : {
              "type" : "array",
              "description" : "Collection of per-project color settings",
              "items" : {
                "$ref" : "#/components/schemas/ProjectColor"
              }
            }
          },
          "description" : "Allows to set card's color based on it's project"
        } ]
      },
      "ProjectColor" : {
        "properties" : {
          "project" : {
            "description" : "A project, to which color this setting describes.",
            "$ref" : "#/components/schemas/Project"
          },
          "color" : {
            "description" : "A color, that issues of this project will have on the board.",
            "$ref" : "#/components/schemas/FieldStyle"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represent color setting for one project on the board.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "ProjectCustomField" : {
        "properties" : {
          "field" : {
            "description" : "Custom field which project settings are described.",
            "$ref" : "#/components/schemas/CustomField"
          },
          "project" : {
            "description" : "Project to which custom field belongs.",
            "$ref" : "#/components/schemas/Project"
          },
          "canBeEmpty" : {
            "type" : "boolean",
            "description" : "If true, this field can have empty value in the issue, otherwise false.",
            "readOnly" : false
          },
          "emptyFieldText" : {
            "type" : "string",
            "description" : "Text that is shown as a placeholder when field is empty.",
            "readOnly" : false
          },
          "ordinal" : {
            "type" : "integer",
            "description" : "Number of this field in project.",
            "format" : "int32",
            "readOnly" : false
          },
          "isPublic" : {
            "type" : "boolean",
            "description" : "If true, issue public read/update are sufficient for accessing this field, otherwise private read/update are required.",
            "readOnly" : false
          },
          "hasRunningJob" : {
            "type" : "boolean",
            "description" : "`true`, if there is a background job running for this field. In this case, some field operations may be temporary inaccessible.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents custom field settings for the particular project.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "ProjectTimeTrackingSettings" : {
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "When `true`, the time tracking in the project is enabled. Otherwise, `false`.",
            "readOnly" : false
          },
          "estimate" : {
            "description" : "The custom field that is used for estimation in the project. The field must be attached to the project.",
            "$ref" : "#/components/schemas/ProjectCustomField"
          },
          "timeSpent" : {
            "description" : "The custom field that is used for estimation in the project. The field must be attached to the project.",
            "$ref" : "#/components/schemas/ProjectCustomField"
          },
          "workItemTypes" : {
            "type" : "array",
            "description" : "A collection of work item types that are used in the project.",
            "items" : {
              "$ref" : "#/components/schemas/WorkItemType"
            }
          },
          "project" : {
            "description" : "Reference to the project, to which these settings belong to.",
            "$ref" : "#/components/schemas/Project"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents time tracking settings of the project.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "RestCorsSettings" : {
        "properties" : {
          "allowedOrigins" : {
            "type" : "string",
            "description" : "Origins that are allowed for cross-origin requests.",
            "readOnly" : false
          },
          "allowAllOrigins" : {
            "type" : "boolean",
            "description" : "Indicates whether requests from all origins are allowed.",
            "readOnly" : false
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the Resource Sharing (CORS) configuration of the service.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "SavedQuery" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/WatchFolder"
        }, {
          "properties" : {
            "query" : {
              "type" : "string",
              "description" : "The query that is saved in this search.",
              "readOnly" : false
            },
            "issues" : {
              "type" : "array",
              "description" : "The collection of issues that match this saved search.",
              "items" : {
                "$ref" : "#/components/schemas/Issue"
              }
            }
          },
          "description" : "Represents a saved search."
        } ]
      },
      "SimpleIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueCustomField"
        }, {
          "properties" : {
            "projectCustomField" : {
              "description" : "Reference to custom field settings for the particular project.",
              "$ref" : "#/components/schemas/ProjectCustomField"
            },
            "value" : {
              "type" : "object",
              "description" : "",
              "readOnly" : true
            }
          },
          "description" : "Represents the field of simple type in the issue."
        } ]
      },
      "SimpleProjectCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProjectCustomField"
        }, {
          "properties" : { },
          "description" : "Represents project settings for fields of types integer, float, date, date and time, string."
        } ]
      },
      "SimpleValueActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SingleValueActivityItem"
        }, {
          "properties" : {
            "removed" : {
              "type" : "object",
              "description" : "Old single value of a property in the target entity.",
              "readOnly" : true
            },
            "added" : {
              "type" : "object",
              "description" : "New single value of a property in the target entity.",
              "readOnly" : true
            }
          },
          "description" : "\n            Represents the change in attributes of a simple type in the target entity:\n            Issue, IssueComment, WorkItem, IssueAttachment.\n            "
        } ]
      },
      "SingleBuildIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseSingleValueIssueCustomField"
        }, {
          "properties" : {
            "value" : {
              "description" : "The actual single value of the issue custom field.",
              "$ref" : "#/components/schemas/BuildBundleElement"
            }
          },
          "description" : "Represents the issue custom field of the `build` type that can only have a single value."
        } ]
      },
      "SingleEnumIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseSingleValueIssueCustomField"
        }, {
          "properties" : {
            "value" : {
              "description" : "The actual single value of the issue custom field.",
              "$ref" : "#/components/schemas/EnumBundleElement"
            }
          },
          "description" : "Represents the issue custom field of the `enum` type that can only have a single value."
        } ]
      },
      "SingleGroupIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseSingleValueIssueCustomField"
        }, {
          "properties" : {
            "value" : {
              "description" : "The actual single value of the issue custom field.",
              "$ref" : "#/components/schemas/UserGroup"
            }
          },
          "description" : "Represents the issue custom field of the `group` type that can only have a single value."
        } ]
      },
      "SingleOwnedIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseSingleValueIssueCustomField"
        }, {
          "properties" : {
            "value" : {
              "description" : "The actual single value of the issue custom field.",
              "$ref" : "#/components/schemas/OwnedBundleElement"
            }
          },
          "description" : "Represents the issue custom field of the `ownedField` type that can only have a single value."
        } ]
      },
      "SingleUserIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseSingleValueIssueCustomField"
        }, {
          "properties" : {
            "value" : {
              "description" : "The actual single value of the issue custom field.",
              "$ref" : "#/components/schemas/User"
            }
          },
          "description" : "Represents the issue custom field of the `user` type that can only have a single value."
        } ]
      },
      "SingleValueActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ActivityItem"
        }, {
          "properties" : { },
          "description" : "Describe change of properties that can have single value."
        } ]
      },
      "DatabaseSingleValueIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueCustomField"
        }, {
          "properties" : {
            "projectCustomField" : {
              "description" : "Reference to custom field settings for the particular project.",
              "$ref" : "#/components/schemas/ProjectCustomField"
            },
            "value" : {
              "type" : "object",
              "description" : "The actual single value of the issue custom field.",
              "readOnly" : true
            }
          },
          "description" : "Represents the all fields of with a single value in the issue."
        } ]
      },
      "SingleVersionIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseSingleValueIssueCustomField"
        }, {
          "properties" : {
            "value" : {
              "description" : "The actual single value of the issue custom field.",
              "$ref" : "#/components/schemas/VersionBundleElement"
            }
          },
          "description" : "Represents the issue custom field of the `version` type that can only have a single value."
        } ]
      },
      "Sprint" : {
        "properties" : {
          "agile" : {
            "description" : "The agile board that the sprint belongs to.",
            "$ref" : "#/components/schemas/Agile"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the sprint.",
            "readOnly" : false
          },
          "goal" : {
            "type" : "string",
            "description" : "Goal of the sprint.",
            "readOnly" : false
          },
          "start" : {
            "type" : "integer",
            "description" : "The start date of the sprint as a timestamp.",
            "format" : "int64",
            "readOnly" : false
          },
          "finish" : {
            "type" : "integer",
            "description" : "The end date of the sprint as a timestamp.",
            "format" : "int64",
            "readOnly" : false
          },
          "archived" : {
            "type" : "boolean",
            "description" : "Indicates whether the sprint is archived.",
            "readOnly" : false
          },
          "isDefault" : {
            "type" : "boolean",
            "description" : "If true, then new issues that match a column on this board are automatically added to this sprint.",
            "readOnly" : false
          },
          "issues" : {
            "type" : "array",
            "description" : "Issues that are present on this sprint.",
            "items" : {
              "$ref" : "#/components/schemas/Issue"
            }
          },
          "unresolvedIssuesCount" : {
            "type" : "integer",
            "description" : "Number of unresolved issues on this sprint.",
            "format" : "int32",
            "readOnly" : true
          },
          "previousSprint" : {
            "description" : "If you provide this attribute when you create a new sprint, then all unresolved issues from this sprint will be moved to the newly created sprint.",
            "$ref" : "#/components/schemas/Sprint"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a sprint that is associated with an agile board. Each sprint can include issues from one or more projects.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "SprintActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MultiValueActivityItem"
        }, {
          "properties" : {
            "target" : {
              "description" : "The entity that is the target of the performed action.",
              "$ref" : "#/components/schemas/Issue"
            },
            "removed" : {
              "type" : "array",
              "description" : "List of sprints the issue was removed from.",
              "items" : {
                "$ref" : "#/components/schemas/Sprint"
              }
            },
            "added" : {
              "type" : "array",
              "description" : "List of sprints the issue was added to.",
              "items" : {
                "$ref" : "#/components/schemas/Sprint"
              }
            }
          },
          "description" : "Represents a change in the issue when it was added to or removed from an agile board sprint."
        } ]
      },
      "SprintsSettings" : {
        "properties" : {
          "isExplicit" : {
            "type" : "boolean",
            "description" : "If true, issues should be added to the board manually. If false, issues are shown on the board based on the query and/or value of a field.",
            "readOnly" : false
          },
          "cardOnSeveralSprints" : {
            "type" : "boolean",
            "description" : "If true, cards can be present on several sprints of this board.",
            "readOnly" : false
          },
          "defaultSprint" : {
            "description" : "New cards are added to this sprint by default. This setting applies only if `isExplicit == true`.",
            "$ref" : "#/components/schemas/Sprint"
          },
          "disableSprints" : {
            "type" : "boolean",
            "description" : "If true, agile board has no distinct sprints in UI. However, in API it will look like it has only one active (not-archived) sprint.",
            "readOnly" : false
          },
          "explicitQuery" : {
            "type" : "string",
            "description" : "Issues that match this query will appear on the board. This setting applies only if `isExplicit == false`.",
            "readOnly" : false
          },
          "sprintSyncField" : {
            "description" : "Based on the value of this field, issues will be assigned to the sprints. This setting applies only if `isExplicit == false`.",
            "$ref" : "#/components/schemas/CustomField"
          },
          "hideSubtasksOfCards" : {
            "type" : "boolean",
            "description" : "If true, subtasks of the cards, that are present on the board, will be hidden if they match board query. This setting applies only if `isExplicit == false`.",
            "readOnly" : false
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Describes sprints configuration.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "StateBundle" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseBundle"
        }, {
          "properties" : {
            "values" : {
              "type" : "array",
              "description" : "The list of states that this set of values contains.",
              "items" : {
                "$ref" : "#/components/schemas/StateBundleElement"
              }
            }
          },
          "description" : "Represents a set of states in YouTrack."
        } ]
      },
      "StateBundleCustomFieldDefaults" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleCustomFieldDefaults"
        }, {
          "properties" : {
            "bundle" : {
              "description" : "Default set of values used for this field.",
              "$ref" : "#/components/schemas/StateBundle"
            },
            "defaultValues" : {
              "type" : "array",
              "description" : "List of states that will be used as the default value for this field.",
              "items" : {
                "$ref" : "#/components/schemas/StateBundleElement"
              }
            }
          },
          "description" : "Default settings for the state-type field."
        } ]
      },
      "StateBundleElement" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/LocalizableBundleElement"
        }, {
          "properties" : {
            "isResolved" : {
              "type" : "boolean",
              "description" : "If `true`, then issues in this state are considered to be resolved.",
              "readOnly" : false
            }
          },
          "description" : "Represents the state of an issue in YouTrack."
        } ]
      },
      "StateIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseSingleValueIssueCustomField"
        }, {
          "properties" : {
            "value" : {
              "description" : "The actual single value of the issue custom field.",
              "$ref" : "#/components/schemas/StateBundleElement"
            }
          },
          "description" : "Represents the issue field of the `state` type."
        } ]
      },
      "StateProjectCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleProjectCustomField"
        }, {
          "properties" : {
            "bundle" : {
              "description" : "Set of states that can be field values.",
              "$ref" : "#/components/schemas/StateBundle"
            },
            "defaultValues" : {
              "type" : "array",
              "description" : "Values that will be set to the new issue by default.",
              "items" : {
                "$ref" : "#/components/schemas/StateBundleElement"
              }
            }
          },
          "description" : "Represents project settings for the state field."
        } ]
      },
      "StorageEntry" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the SSL key.",
            "readOnly" : false
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "SSL key representation.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "Suggestion" : {
        "properties" : {
          "completionStart" : {
            "type" : "integer",
            "description" : "Start index of inserted string.",
            "format" : "int32",
            "readOnly" : true
          },
          "completionEnd" : {
            "type" : "integer",
            "description" : "End index of inserted string.",
            "format" : "int32",
            "readOnly" : true
          },
          "matchingStart" : {
            "type" : "integer",
            "description" : "Start index of the matched string.",
            "format" : "int32",
            "readOnly" : true
          },
          "matchingEnd" : {
            "type" : "integer",
            "description" : "End index of the matched string.",
            "format" : "int32",
            "readOnly" : true
          },
          "caret" : {
            "type" : "integer",
            "description" : "Position of the caret after insertion.",
            "format" : "int32",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the suggested item.",
            "readOnly" : true
          },
          "option" : {
            "type" : "string",
            "description" : "Suggested option.",
            "readOnly" : true
          },
          "prefix" : {
            "type" : "string",
            "description" : "Prefix that should be inserted before the option.",
            "readOnly" : true
          },
          "suffix" : {
            "type" : "string",
            "description" : "Suffix that should be inserted after the option.",
            "readOnly" : true
          },
          "group" : {
            "type" : "string",
            "description" : "Name of the group for the suggestion.",
            "readOnly" : true
          },
          "icon" : {
            "type" : "string",
            "description" : "An icon URI for the item.",
            "readOnly" : true
          },
          "auxiliaryIcon" : {
            "type" : "string",
            "description" : "An additional icon URI for the item.",
            "readOnly" : true
          },
          "className" : {
            "type" : "string",
            "description" : "Css class name that should be used for the item.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents query suggestion.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "SwimlaneEntityAttributeValue" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseAttributeValue"
        }, {
          "properties" : {
            "name" : {
              "type" : "string",
              "description" : "Name of the swimlane.",
              "readOnly" : false
            },
            "isResolved" : {
              "type" : "boolean",
              "description" : "If true, issues in this swimlane are considered to be resolved. Can be updated only for newly created value.",
              "readOnly" : true
            }
          },
          "description" : "Represents a single swimlane in case of AttributeBasedSwimlaneSettings."
        } ]
      },
      "SwimlaneSettings" : {
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "If false, board has no swimlanes and all cards are shown as uncategorized.",
            "readOnly" : false
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Base entity for different swimlane settings",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "SwimlaneValue" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of a value.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents single swimlane in case of IssueBasedSwimlaneSettings.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "SystemSettings" : {
        "properties" : {
          "baseUrl" : {
            "type" : "string",
            "description" : "Base URL of the YouTrack installation.",
            "readOnly" : false
          },
          "maxUploadFileSize" : {
            "type" : "integer",
            "description" : "Maximum size of the file that can be uploaded.",
            "format" : "int64",
            "readOnly" : false
          },
          "maxExportItems" : {
            "type" : "integer",
            "description" : "Maximum number of issues that can be exported.",
            "format" : "int32",
            "readOnly" : false
          },
          "administratorEmail" : {
            "type" : "string",
            "description" : "Email of server administrator.",
            "readOnly" : false
          },
          "allowStatisticsCollection" : {
            "type" : "boolean",
            "description" : "Indicates whether it is allowed to collect usage statistics.",
            "readOnly" : false
          },
          "isApplicationReadOnly" : {
            "type" : "boolean",
            "description" : "`true`, if the application is currently in the read-only mode. Otherwise, `false`.",
            "readOnly" : false
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the System settings that affect core functionality of YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "TagsActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MultiValueActivityItem"
        }, {
          "properties" : {
            "target" : {
              "description" : "The entity that is the target of the performed action.",
              "$ref" : "#/components/schemas/Issue"
            },
            "removed" : {
              "type" : "array",
              "description" : "The list of tags removed from the issue.",
              "items" : {
                "$ref" : "#/components/schemas/IssueTag"
              }
            },
            "added" : {
              "type" : "array",
              "description" : "The list of tags added to the issue.",
              "items" : {
                "$ref" : "#/components/schemas/IssueTag"
              }
            }
          },
          "description" : "Represents a change in the list of tags of an issue."
        } ]
      },
      "Telemetry" : {
        "properties" : {
          "installationFolder" : {
            "type" : "string",
            "description" : "Installation folder of YouTrack.",
            "readOnly" : true
          },
          "databaseLocation" : {
            "type" : "string",
            "description" : "Location of the YouTrack database.",
            "readOnly" : true
          },
          "logsLocation" : {
            "type" : "string",
            "description" : "Location of the logs.",
            "readOnly" : true
          },
          "availableProcessors" : {
            "type" : "integer",
            "description" : "Number of available processors.",
            "format" : "int32",
            "readOnly" : true
          },
          "availableMemory" : {
            "type" : "string",
            "description" : "Available memory.",
            "readOnly" : true
          },
          "allocatedMemory" : {
            "type" : "string",
            "description" : "Allocated memory.",
            "readOnly" : true
          },
          "usedMemory" : {
            "type" : "string",
            "description" : "Used memory.",
            "readOnly" : true
          },
          "uptime" : {
            "type" : "string",
            "description" : "Uptime of the YouTrack application.",
            "readOnly" : true
          },
          "startedTime" : {
            "type" : "integer",
            "description" : "Date and time when YouTrack was started.",
            "format" : "int64",
            "readOnly" : true
          },
          "databaseBackgroundThreads" : {
            "type" : "integer",
            "description" : "Number of database background threads.",
            "format" : "int32",
            "readOnly" : true
          },
          "pendingAsyncJobs" : {
            "type" : "integer",
            "description" : "Number of pending asynchronous jobs.",
            "format" : "int32",
            "readOnly" : true
          },
          "cachedResultsCountInDBQueriesCache" : {
            "type" : "integer",
            "description" : "Size of the database queries cache.",
            "format" : "int32",
            "readOnly" : true
          },
          "databaseQueriesCacheHitRate" : {
            "type" : "string",
            "description" : "Queries cache hit rate.",
            "readOnly" : true
          },
          "blobStringsCacheHitRate" : {
            "type" : "string",
            "description" : "Blobs cache hit rate.",
            "readOnly" : true
          },
          "totalTransactions" : {
            "type" : "integer",
            "description" : "Number of transactions.",
            "format" : "int64",
            "readOnly" : true
          },
          "transactionsPerSecond" : {
            "type" : "string",
            "description" : "Number of transactions per second.",
            "readOnly" : true
          },
          "requestsPerSecond" : {
            "type" : "string",
            "description" : "Number of requests per second.",
            "readOnly" : true
          },
          "databaseSize" : {
            "type" : "string",
            "description" : "Size of the database (without blobs).",
            "readOnly" : true
          },
          "fullDatabaseSize" : {
            "type" : "string",
            "description" : "Full size of the database.",
            "readOnly" : true
          },
          "textIndexSize" : {
            "type" : "string",
            "description" : "Size of the text index.",
            "readOnly" : true
          },
          "onlineUsers" : {
            "description" : "Online users.",
            "$ref" : "#/components/schemas/OnlineUsers"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Telemetry of the YouTrack installation.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "TextCustomFieldActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CustomFieldActivityItem"
        }, {
          "properties" : {
            "target" : {
              "description" : "The entity that is the target of the performed action.",
              "$ref" : "#/components/schemas/Issue"
            },
            "removed" : {
              "type" : "string",
              "description" : "The old text of the modified custom field in the target issue.",
              "readOnly" : true
            },
            "added" : {
              "type" : "string",
              "description" : "The new text of the custom field in the target issue.",
              "readOnly" : true
            },
            "markup" : {
              "type" : "string",
              "description" : "The text in the custom field after the change rendered using markup language.",
              "readOnly" : true
            }
          },
          "description" : "Represents an activity that affects a custom field of the `text` type of an issue."
        } ]
      },
      "TextFieldValue" : {
        "properties" : {
          "text" : {
            "type" : "string",
            "description" : "The original source text of the custom field.",
            "readOnly" : true
          },
          "markdownText" : {
            "type" : "string",
            "description" : "The rendered markdown text of the custom field.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a value of the text field. Returns both source and rendered text.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "TextIssueCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueCustomField"
        }, {
          "properties" : {
            "value" : {
              "description" : "The text in the custom field.",
              "$ref" : "#/components/schemas/TextFieldValue"
            }
          },
          "description" : "Represents the issue custom field of the `text` type."
        } ]
      },
      "TextMarkupActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SimpleValueActivityItem"
        }, {
          "properties" : {
            "removed" : {
              "type" : "string",
              "description" : "Old value of the text.",
              "readOnly" : true
            },
            "added" : {
              "type" : "string",
              "description" : "New value of the text.",
              "readOnly" : true
            },
            "markup" : {
              "type" : "string",
              "description" : "The new text that is rendered using the markup language.",
              "readOnly" : true
            }
          },
          "description" : "\n            Represents a change in a `String`-type attribute with the support of markup:\n            `description` in an Issue or IssueWorkItem, and the `text` of the IssueComment.\n            This entity lets you get the rendered text after the change.\n            "
        } ]
      },
      "TextProjectCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SimpleProjectCustomField"
        }, {
          "properties" : { },
          "description" : "Represents settings of the text-type field in the project."
        } ]
      },
      "TimeTrackingUserProfile" : {
        "properties" : {
          "periodFormat" : {
            "description" : "Format, in which period values are displayed for the user.",
            "$ref" : "#/components/schemas/PeriodFieldFormat"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents time tracking settings in the user's profile.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "TimeZoneDescriptor" : {
        "properties" : {
          "presentation" : {
            "type" : "string",
            "description" : "The name of the time zone.",
            "readOnly" : true
          },
          "offset" : {
            "type" : "integer",
            "description" : "Time zone offset in minutes.",
            "format" : "int32",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a time zone.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "UnlimitedVisibility" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Visibility"
        }, {
          "properties" : { },
          "description" : "Represents unlimited visibility."
        } ]
      },
      "User" : {
        "properties" : {
          "login" : {
            "type" : "string",
            "description" : "The login of the user.",
            "readOnly" : true
          },
          "fullName" : {
            "type" : "string",
            "description" : "The full name of the user as seen in their profile.",
            "readOnly" : true
          },
          "email" : {
            "type" : "string",
            "description" : "The email address of the user.",
            "readOnly" : true
          },
          "jabberAccountName" : {
            "type" : "string",
            "description" : "The jabber account name of the user.",
            "readOnly" : true
          },
          "ringId" : {
            "type" : "string",
            "description" : "ID of the user in Hub. You can use this ID for operations in Hub, and for matching users between YouTrack and Hub.",
            "readOnly" : true
          },
          "guest" : {
            "type" : "boolean",
            "description" : "Indicates whether the user is `guest`.",
            "readOnly" : true
          },
          "online" : {
            "type" : "boolean",
            "description" : "Indicates whether the user is currently online.",
            "readOnly" : true
          },
          "banned" : {
            "type" : "boolean",
            "description" : "Indicates whether the user is banned.",
            "readOnly" : true
          },
          "tags" : {
            "type" : "array",
            "description" : "Tags that belong to this user.",
            "items" : {
              "$ref" : "#/components/schemas/IssueTag"
            }
          },
          "savedQueries" : {
            "type" : "array",
            "description" : "Saved searches that belong to this user.",
            "items" : {
              "$ref" : "#/components/schemas/SavedQuery"
            }
          },
          "avatarUrl" : {
            "type" : "string",
            "description" : "The URL of the user avatar.",
            "readOnly" : true
          },
          "profiles" : {
            "type" : "object",
            "description" : "List of the user's profiles.",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a user in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "UserBundle" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Bundle"
        }, {
          "properties" : {
            "groups" : {
              "type" : "array",
              "description" : "User groups that belong to this bundle.",
              "items" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            },
            "individuals" : {
              "type" : "array",
              "description" : "Individual users that belong to this bundle.",
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "aggregatedUsers" : {
              "type" : "array",
              "description" : "All users that belong to this bundle.",
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "Represents a set of values that contains users. You can add to the set both individual user accounts and groups of users."
        } ]
      },
      "UserCustomFieldDefaults" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CustomFieldDefaults"
        }, {
          "properties" : {
            "bundle" : {
              "description" : "Default set of values used for this field.",
              "$ref" : "#/components/schemas/UserBundle"
            },
            "defaultValues" : {
              "type" : "array",
              "description" : "List of users that will be used as the default value for this field.",
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "Represents default settings for the user-type field."
        } ]
      },
      "UserGroup" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the group.",
            "readOnly" : true
          },
          "ringId" : {
            "type" : "string",
            "description" : "ID of the group in Hub. Use this ID for operations in Hub, and for matching groups between YouTrack and Hub.",
            "readOnly" : true
          },
          "usersCount" : {
            "type" : "integer",
            "description" : "The number of users in the group.",
            "format" : "int64",
            "readOnly" : true
          },
          "icon" : {
            "type" : "string",
            "description" : "The URL of the group icon.",
            "readOnly" : true
          },
          "allUsersGroup" : {
            "type" : "boolean",
            "description" : "True if this group contains all users, otherwise false.",
            "readOnly" : true
          },
          "teamForProject" : {
            "description" : "Project that has this group set as a team. Returns `null`, if there is no such project.",
            "$ref" : "#/components/schemas/Project"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a group of users.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "UserProjectCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleProjectCustomField"
        }, {
          "properties" : {
            "bundle" : {
              "description" : "Set of users that can be field values.",
              "$ref" : "#/components/schemas/UserBundle"
            },
            "defaultValues" : {
              "type" : "array",
              "description" : "Values that will be set to the new issue by default.",
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "Represents project settings for the user field."
        } ]
      },
      "UsesMarkupActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SimpleValueActivityItem"
        }, {
          "properties" : {
            "removed" : {
              "type" : "boolean",
              "description" : "Old value of the flag.",
              "readOnly" : true
            },
            "added" : {
              "type" : "boolean",
              "description" : "New value of the flag.",
              "readOnly" : true
            },
            "markup" : {
              "type" : "string",
              "description" : "Target entity text rendered using the new value of the markup language.",
              "readOnly" : true
            }
          },
          "description" : "\n            Represents the change of the boolean flag that indicates whether YouTrack Wiki or Markdown\n            is used in the target entity as a markup language. If \"true\", then the markdown is used.\n            Otherwise, YouTrack Wiki markup.\n            "
        } ]
      },
      "VcsChangeActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreatedDeletedActivityItem"
        }, {
          "properties" : {
            "removed" : {
              "type" : "object",
              "description" : "List of removed VCS changes.",
              "readOnly" : true
            },
            "added" : {
              "type" : "object",
              "description" : "List of added VCS changes.",
              "readOnly" : true
            },
            "author" : {
              "description" : "\n                Author of the VCS change. If, at the moment of fetching the VCS change, YouTrack fails to find a user\n                that matches its author, then the activity author is set to the `VcsUnresolvedUser`.\n                ",
              "$ref" : "#/components/schemas/User"
            }
          },
          "description" : "Represents an update in the list of VCSChanges of an issue."
        } ]
      },
      "VcsUnresolvedUser" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/User"
        }, {
          "properties" : {
            "name" : {
              "type" : "string",
              "description" : "Name of the VCS change author that wasn't found in the list of YouTrack users.",
              "readOnly" : true
            }
          },
          "description" : "Represents an author of a VCS change that could not be found in the list of YouTrack users."
        } ]
      },
      "VersionBundle" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseBundle"
        }, {
          "properties" : {
            "values" : {
              "type" : "array",
              "description" : "Collection of versions contained in the bundle.",
              "items" : {
                "$ref" : "#/components/schemas/VersionBundleElement"
              }
            }
          },
          "description" : "Represents a set of versions in YouTrack."
        } ]
      },
      "VersionBundleCustomFieldDefaults" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleCustomFieldDefaults"
        }, {
          "properties" : {
            "bundle" : {
              "description" : "Default set of values used for this field.",
              "$ref" : "#/components/schemas/VersionBundle"
            },
            "defaultValues" : {
              "type" : "array",
              "description" : "List of version that will be used as the default value for this field.",
              "items" : {
                "$ref" : "#/components/schemas/VersionBundleElement"
              }
            }
          },
          "description" : "Default settings for the version-type field."
        } ]
      },
      "VersionBundleElement" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleElement"
        }, {
          "properties" : {
            "archived" : {
              "type" : "boolean",
              "description" : "Indicates whether the version is archived.",
              "readOnly" : false
            },
            "releaseDate" : {
              "type" : "integer",
              "description" : "The release date that is associated with the version.",
              "format" : "int64",
              "readOnly" : false
            },
            "released" : {
              "type" : "boolean",
              "description" : "Indicates whether the version is marked as released.",
              "readOnly" : false
            }
          },
          "description" : "Represents a version in YouTrack."
        } ]
      },
      "VersionProjectCustomField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleProjectCustomField"
        }, {
          "properties" : {
            "bundle" : {
              "description" : "Set of versions that can be field values.",
              "$ref" : "#/components/schemas/VersionBundle"
            },
            "defaultValues" : {
              "type" : "array",
              "description" : "Values that will be set to the new issue by default.",
              "items" : {
                "$ref" : "#/components/schemas/VersionBundleElement"
              }
            }
          },
          "description" : "Represents project settings for the version field."
        } ]
      },
      "Visibility" : {
        "properties" : {
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Describes visibility settings for an entity (issue, comment, etc.)",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "VisibilityActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MultiValueActivityItem"
        }, {
          "properties" : {
            "targetMember" : {
              "type" : "string",
              "description" : "Returns the \"visibility\" property that changed in the target entity.",
              "readOnly" : true
            }
          },
          "description" : "\n            Represents the changes of properties responsible for visibility restriction.\n            Can be <a href=\"api-entity-VisibilityGroupActivityItem.xml\">VisibilityGroupActivityItem</a> or <a href=\"api-entity-VisibilityUserActivityItem.xml\">VisibilityUserActivityItem</a>    \n            "
        } ]
      },
      "VisibilityGroupActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/VisibilityActivityItem"
        }, {
          "properties" : {
            "targetMember" : {
              "type" : "string",
              "description" : "The name of property changed in the target entity.",
              "readOnly" : true
            },
            "targetSubMember" : {
              "type" : "string",
              "description" : "The name of property refining `targetMember`.",
              "readOnly" : true
            },
            "removed" : {
              "type" : "array",
              "description" : "User groups removed from the visibility.",
              "items" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            },
            "added" : {
              "type" : "array",
              "description" : "User groups added to the visibility.",
              "items" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            }
          },
          "description" : "Represents the event when a user adds or removes a group to/from the Visibility settings of the target entity."
        } ]
      },
      "VisibilityUserActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/VisibilityActivityItem"
        }, {
          "properties" : {
            "targetMember" : {
              "type" : "string",
              "description" : "The name of property changed in the target.",
              "readOnly" : true
            },
            "targetSubMember" : {
              "type" : "string",
              "description" : "The name of property refining `targetMember`.",
              "readOnly" : true
            },
            "removed" : {
              "type" : "array",
              "description" : "Users removed from the visibility list.",
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "added" : {
              "type" : "array",
              "description" : "Users added to the visibility list.",
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "Represents the event when a user adds or removes a user to/from the Visibility settings of the target entity."
        } ]
      },
      "VotersActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MultiValueActivityItem"
        }, {
          "properties" : {
            "target" : {
              "description" : "The entity that is the target of the performed action.",
              "$ref" : "#/components/schemas/Issue"
            },
            "removed" : {
              "type" : "array",
              "description" : "The list of voters removed from the issue.",
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "added" : {
              "type" : "array",
              "description" : "The list of voters added to the issue.",
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "Represents a change in the list of voters of an issue."
        } ]
      },
      "WIPLimit" : {
        "properties" : {
          "max" : {
            "type" : "integer",
            "description" : "Maximum number of cards in column.",
            "format" : "int32",
            "readOnly" : false
          },
          "min" : {
            "type" : "integer",
            "description" : "Minimum number of cards in column.",
            "format" : "int32",
            "readOnly" : false
          },
          "column" : {
            "description" : "A column, this WIP is applied to.",
            "$ref" : "#/components/schemas/AgileColumn"
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents WIP limits for particular column. If they are not satisfied, the column will be highlighted in UI.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "WatchFolder" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueFolder"
        }, {
          "properties" : {
            "owner" : {
              "description" : "A user who created &mdash; hence, owns &mdash; the watch folder.",
              "$ref" : "#/components/schemas/User"
            },
            "visibleFor" : {
              "description" : "Group of users that can see this watch folder. If the folder is visible only for its owner, this property is null.",
              "$ref" : "#/components/schemas/UserGroup"
            },
            "updateableBy" : {
              "description" : "Group of users that can update this watch folder. If only the folder's owner can update it, this property is null.",
              "$ref" : "#/components/schemas/UserGroup"
            }
          },
          "description" : "A `WatchFolder` is an `IssueFolder` that let you enable notifications for a set \nof issues that it enfolds. It is a common abstract ancestor for saved searches and issue tags."
        } ]
      },
      "WorkItemActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreatedDeletedActivityItem"
        }, {
          "properties" : {
            "target" : {
              "description" : "The entity that is the target of the performed action.",
              "$ref" : "#/components/schemas/IssueWorkItem"
            },
            "removed" : {
              "type" : "array",
              "description" : "The list of removed work items.",
              "items" : {
                "$ref" : "#/components/schemas/IssueWorkItem"
              }
            },
            "added" : {
              "type" : "array",
              "description" : "The list of added work items.",
              "items" : {
                "$ref" : "#/components/schemas/IssueWorkItem"
              }
            }
          },
          "description" : "Represents a change in a list of work items in an issue."
        } ]
      },
      "WorkItemAuthorActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SingleValueActivityItem"
        }, {
          "properties" : {
            "target" : {
              "description" : "The entity that is the target of the performed action.",
              "$ref" : "#/components/schemas/IssueWorkItem"
            },
            "removed" : {
              "description" : "Previous author of the work item.",
              "$ref" : "#/components/schemas/User"
            },
            "added" : {
              "description" : "New author of work item.",
              "$ref" : "#/components/schemas/User"
            }
          },
          "description" : "Represents a change in the `author` attribute of a work item."
        } ]
      },
      "WorkItemDurationActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SingleValueActivityItem"
        }, {
          "properties" : {
            "target" : {
              "description" : "The entity that is the target of the performed action.",
              "$ref" : "#/components/schemas/IssueWorkItem"
            },
            "removed" : {
              "description" : "Old duration value of the work item.",
              "$ref" : "#/components/schemas/DurationValue"
            },
            "added" : {
              "description" : "New duration value of the work item.",
              "$ref" : "#/components/schemas/DurationValue"
            }
          },
          "description" : "Represents a change in the `duration` attribute of a work item."
        } ]
      },
      "WorkItemType" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the work item type.",
            "readOnly" : false
          },
          "autoAttached" : {
            "type" : "boolean",
            "description" : "If true, this work item type is automatically added to a project, when you enable the time tracking for it.",
            "readOnly" : false
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a work type that can be assigned to a work item.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "WorkItemTypeActivityItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MultiValueActivityItem"
        }, {
          "properties" : {
            "target" : {
              "description" : "The entity that is the target of the performed action.",
              "$ref" : "#/components/schemas/IssueWorkItem"
            },
            "removed" : {
              "type" : "array",
              "description" : "List of removed types in the work item.",
              "items" : {
                "$ref" : "#/components/schemas/WorkItemType"
              }
            },
            "added" : {
              "type" : "array",
              "description" : "List of added types in the work item.",
              "items" : {
                "$ref" : "#/components/schemas/WorkItemType"
              }
            }
          },
          "description" : "Represents a change in the `type` attribute of the work item."
        } ]
      },
      "WorkTimeSettings" : {
        "properties" : {
          "minutesADay" : {
            "type" : "integer",
            "description" : "Number of minutes per working day. For example, for an 8-hour day, it would be 480.",
            "format" : "int32",
            "readOnly" : false
          },
          "workDays" : {
            "type" : "integer",
            "description" : "The indexes of the days of the week that are counted as working days. Sunday's index is 0, Monday's index is 1 and so on.",
            "format" : "int32",
            "readOnly" : false
          },
          "firstDayOfWeek" : {
            "type" : "integer",
            "description" : "Index of the first day of week. It depends on server locale.",
            "format" : "int32",
            "readOnly" : true
          },
          "daysAWeek" : {
            "type" : "integer",
            "description" : "Number of working days a week.",
            "format" : "int32",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Work schedule settings.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      }
    }
  }
}